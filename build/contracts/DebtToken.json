{
  "contractName": "DebtToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "BatchDebtMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "BatchDebtRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "underlyingAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DebtMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "underlyingAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DebtRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalTime",
          "type": "uint256"
        }
      ],
      "name": "UpgradeProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeProposalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_upgradeDelay",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "proposeUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposedImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUpgradeProposalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchDebtMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchDebtRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DebtMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DebtRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"}],\"name\":\"UpgradeProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposedImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUpgradeProposalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_upgradeDelay\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"proposeUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeProposalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Upgradeable ERC20 token representing user debt in a lending protocol\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"batchBurn(address[],uint256[])\":{\"details\":\"Only callable by the owner (LendingPool) when not paused, with reentrancy protection\",\"params\":{\"accounts\":\"Array of addresses from which to burn debt tokens\",\"amounts\":\"Array of amounts to burn for each account\"}},\"batchMint(address[],uint256[])\":{\"details\":\"Only callable by the owner (LendingPool) when not paused, with reentrancy protection\",\"params\":{\"amounts\":\"Array of amounts to mint for each recipient\",\"recipients\":\"Array of addresses receiving the debt tokens\"}},\"burn(address,uint256)\":{\"details\":\"Only callable by the owner (LendingPool) when not paused, with reentrancy protection\",\"params\":{\"amount\":\"Amount of debt tokens to burn, in wei\",\"from\":\"Address from which to burn debt tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getProposedImplementation()\":{\"returns\":{\"_0\":\"Address of the proposed implementation\"}},\"getUpgradeProposalTime()\":{\"returns\":{\"_0\":\"Timestamp of the proposed upgrade\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string,address,address,uint256)\":{\"details\":\"Constructor is replaced by initializer for upgradeable contracts\",\"params\":{\"_underlyingAsset\":\"Address of the underlying asset (e.g., USDC)\",\"_upgradeDelay\":\"Delay for upgrades in seconds (min 1 hour, max 30 days)\",\"name_\":\"Token name (e.g., \\\"Debt USDC\\\")\",\"symbol_\":\"Token symbol (e.g., \\\"dUSDC\\\")\"}},\"mint(address,uint256)\":{\"details\":\"Only callable by the owner (LendingPool) when not paused, with reentrancy protection\",\"params\":{\"amount\":\"Amount of debt tokens to mint, in wei\",\"to\":\"Address receiving the debt tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only callable by the owner\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proposeUpgrade(address)\":{\"details\":\"Only callable by the owner. The upgrade can only be executed after the timelock period (upgradeDelay) has passed.\",\"params\":{\"newImplementation\":\"Address of the new contract implementation\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Debt tokens are non-transferable to ensure protocol integrity\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Debt tokens are non-transferable to ensure protocol integrity\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only callable by the owner\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"DebtToken\",\"version\":1},\"userdoc\":{\"events\":{\"BatchDebtMinted(address[],uint256[])\":{\"notice\":\"Emitted when debt tokens are minted in batch\"},\"BatchDebtRepaid(address[],uint256[])\":{\"notice\":\"Emitted when debt tokens are burned in batch\"},\"DebtMinted(address,address,uint256)\":{\"notice\":\"Emitted when debt tokens are minted\"},\"DebtRepaid(address,address,uint256)\":{\"notice\":\"Emitted when debt tokens are burned\"},\"UpgradeProposed(address,uint256)\":{\"notice\":\"Emitted when an upgrade is proposed\"}},\"kind\":\"user\",\"methods\":{\"batchBurn(address[],uint256[])\":{\"notice\":\"Burns debt tokens from multiple users in a single transaction\"},\"batchMint(address[],uint256[])\":{\"notice\":\"Mints debt tokens to multiple users in a single transaction\"},\"burn(address,uint256)\":{\"notice\":\"Burns debt tokens from a user, representing debt repayment\"},\"getProposedImplementation()\":{\"notice\":\"Returns the proposed implementation address\"},\"getUpgradeProposalTime()\":{\"notice\":\"Returns the timestamp when the proposed upgrade can be executed\"},\"mint(address,uint256)\":{\"notice\":\"Mints debt tokens to a user, representing new debt\"},\"pause()\":{\"notice\":\"Pauses minting and burning operations\"},\"proposeUpgrade(address)\":{\"notice\":\"Proposes a new implementation for the contract upgrade\"},\"proposedImplementation()\":{\"notice\":\"Proposed new implementation address for the upgrade\"},\"transfer(address,uint256)\":{\"notice\":\"Disables token transfers\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Disables token transfers\"},\"underlyingAsset()\":{\"notice\":\"Address of the underlying asset (e.g., USDC) associated with this debt token\"},\"unpause()\":{\"notice\":\"Unpauses minting and burning operations\"},\"upgradeDelay()\":{\"notice\":\"Delay for contract upgrades (in seconds)\"},\"upgradeProposalTime()\":{\"notice\":\"Timestamp when the proposed upgrade can be executed\"}},\"notice\":\"Tracks debt for a specific asset, minted when borrowing and burned upon repayment.         Only the owner (LendingPool) can mint/burn tokens. Supports pausing, upgrades with a timelock,         and reentrancy protection for future-proofing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DebtToken.sol\":\"DebtToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"project:/contracts/DebtToken.sol\":{\"keccak256\":\"0x11d5ffcd58fce8903ae6529b8d4676b1ce14b2c88723a2a2982e093a146f0926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3bb26a75c8ba5898e5831fa4dcbd711c26a3d2e2cb4b33a23ee058866ba6f0b\",\"dweb:/ipfs/QmYm1mKMgx26rr3kPbMxZgNQcfey53X5QvXELcrXFSxPFE\"]}},\"version\":1}",
  "bytecode": "0x60a0604052346200003657620000146200003b565b604051612b38620000a18239608051818181610bea01526112a80152612b3890f35b600080fd5b6200004562000047565b565b620000456200004562000090565b6200006b906200006e906001600160a01b031682565b90565b6001600160a01b031690565b6200006b9062000055565b6200006b906200007a565b6200009b3062000085565b60805256fe6080604052600436101561001257600080fd5b60003560e01c806306fdde0314610212578063095ea7b31461020d57806318160ddd1461020857806323b872dd14610203578063313ce567146101fe5780633659cfe6146101f957806339509351146101f45780633f4ba83a146101ef57806340381738146101ea57806340c10f19146101e55780634a6cc677146101e05780634f1ef286146101db57806352d1902d146101d65780635ac22bf8146101d15780635c975abb146101cc578063651eebfe146101c757806368573107146101c257806370a08231146101bd578063715018a6146101b85780637158da7c146101b35780637e48d4ea146101ae5780638456cb59146101a95780638da5cb5b146101a457806395d89b411461019f5780639dc29fac1461019a578063a457c2d714610195578063a9059cbb14610190578063bb057c5e1461018b578063c915fc9314610186578063c9aba0aa14610181578063dd62ed3e1461017c5763f2fde38b0361021757610938565b61091c565b6108dd565b61085c565b610841565b61081e565b610802565b6107e9565b6107ce565b6107b3565b61079b565b610780565b610758565b610714565b6106f9565b6106dd565b6106c2565b610684565b61065d565b610629565b610615565b610502565b61046e565b610453565b61043b565b61041f565b610402565b6103bf565b6103a9565b610354565b610326565b610296565b600080fd5b600091031261021757565b60005b83811061023a5750506000910152565b818101518382015260200161022a565b61026b61027460209361027e9361025f815190565b80835293849260200190565b95869101610227565b601f01601f191690565b0190565b60208082526102939291019061024a565b90565b34610217576102a636600461021c565b6102bd6102b1610a48565b60405191829182610282565b0390f35b6001600160a01b031690565b6102d6816102c1565b0361021757565b905035906102ea826102cd565b565b806102d6565b905035906102ea826102ec565b91906040838203126102175761029390602061031b82866102dd565b94016102f2565b9052565b34610217576102bd61034261033c3660046102ff565b90610a52565b60405191829182901515815260200190565b346102175761036436600461021c565b6102bd61036f610a73565b6040515b9182918290815260200190565b90916060828403126102175761029361039984846102dd565b93604061031b82602087016102dd565b34610217576103b9366004610380565b91610a7d565b34610217576103cf36600461021c565b6102bd6103da610ae3565b6040519182918260ff909116815260200190565b9060208282031261021757610293916102dd565b346102175761041a6104153660046103ee565b610caf565b604051005b34610217576102bd6103426104353660046102ff565b90610ce0565b346102175761044b36600461021c565b61041a610d4c565b346102175761046336600461021c565b6102bd61036f610d54565b346102175761041a6104813660046102ff565b90610ede565b909182601f83011215610217578135916001600160401b03831161021757602001926020830284011161021757565b90916040828403126102175781356001600160401b03811161021757836104de918401610487565b92909360208201356001600160401b038111610217576104fe9201610487565b9091565b346102175761041a6105153660046104b6565b929190916111e7565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761055557604052565b61051e565b906102ea61056760405190565b9283610534565b6001600160401b03811161055557602090601f01601f19160190565b90826000939282370152565b909291926105ab6105a68261056e565b61055a565b9381855281830111610217576102ea91602085019061058a565b9080601f830112156102175781602061029393359101610596565b919091604081840312610217576105f783826102dd565b9260208201356001600160401b0381116102175761029392016105c5565b61041a6106233660046105e0565b90611219565b346102175761063936600461021c565b6102bd61036f611309565b610322906102c1565b6020810192916102ea9190610644565b346102175761066d36600461021c565b6102bd610678611313565b6040519182918261064d565b346102175761069436600461021c565b6102bd610342611331565b610293916008021c81565b90610293915461069f565b61029360006101616106aa565b34610217576106d236600461021c565b6102bd61036f6106b5565b346102175761041a6106f03660046104b6565b92919091611437565b34610217576102bd61036f61070f3660046103ee565b61145b565b346102175761072436600461021c565b61041a611494565b610293916008021c6001600160a01b031690565b90610293915461072c565b610293600061015f610740565b346102175761076836600461021c565b6102bd61067861074b565b61029360006101606106aa565b346102175761079036600461021c565b6102bd61036f610773565b34610217576107ab36600461021c565b61041a6114d9565b34610217576107c336600461021c565b6102bd6106786114e1565b34610217576107de36600461021c565b6102bd6102b16114eb565b346102175761041a6107fc3660046102ff565b90611578565b34610217576102bd6103426108183660046102ff565b906115dc565b346102175761082e3660046102ff565b90610a7d565b6102936000610162610740565b346102175761085136600461021c565b6102bd610678610834565b346102175761041a61086f3660046103ee565b61173a565b919060a0838203126102175782356001600160401b038111610217578161089c9185016105c5565b9260208101356001600160401b03811161021757826108bc9183016105c5565b926102936108cd84604085016102dd565b93608061031b82606087016102dd565b346102175761041a6108f0366004610874565b93929092611b88565b91906040838203126102175761029390602061091582866102dd565b94016102dd565b34610217576102bd61036f6109323660046108f9565b90611b95565b346102175761041a61094b3660046103ee565b611c45565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610986575b602083101461098157565b610950565b91607f1691610976565b805460009392916109ad6109a383610966565b8085529360200190565b91600181169081156109ff57506001146109c657505050565b6109d99192939450600052602060002090565b916000925b8184106109eb5750500190565b8054848401526020909301926001016109de565b92949550505060ff1916825215156020020190565b9061029391610990565b906102ea610a3892610a2f60405190565b93848092610a14565b0383610534565b61029390610a1e565b6102936036610a3f565b610a5d919033611cfd565b600190565b6102939081565b6102939054610a62565b6102936035610a69565b60405162461bcd60e51b815260206004820152602160248201527f44656274546f6b656e3a205472616e7366657273206172652064697361626c656044820152601960fa1b6064820152608490fd5b0390fd5b610add6102936102939290565b60ff1690565b6102936012610ad0565b610293906102c1906001600160a01b031682565b61029390610aed565b61029390610b01565b15610b1a57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610b7b57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b6102ea90610c3d610be530610b0a565b610c237f000000000000000000000000000000000000000000000000000000000000000091610c1c610c16846102c1565b916102c1565b1415610b13565b610c37610c16610c31611d81565b926102c1565b14610b74565b610c89565b6102936102936102939290565b90610c5c6105a68361056e565b918252565b369037565b906102ea610c7c610c7684610c4f565b9361056e565b601f190160208401610c61565b60006102ea91610c9881611ee9565b610ca9610ca483610c42565b610c66565b90611f9a565b6102ea90610bd5565b634e487b7160e01b600052601160045260246000fd5b91908201809211610cdb57565b610cb8565b610a5d9190610cf93392610cf48385611b95565b610cce565b91611cfd565b610d076120f9565b6102ea610d1261216c565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d3c60405190565b80610d47338261064d565b0390a1565b6102ea610cff565b610293610161610a69565b906102ea91610d6c6120f9565b906102ea91610d796121b3565b90610d8b91610d8661221c565b610e4a565b6102ea612250565b6102c16102936102939290565b61029390610d93565b15610db057565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b15610dee57565b60405162461bcd60e51b815280610acc600482016020808252818101527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604082015260600190565b610293906102c1565b6102939054610e37565b610e6f610e5f610e5a6000610da0565b6102c1565b610e68836102c1565b1415610da9565b610e84610e7c6000610c42565b835b11610de7565b610e8e82826122a7565b7f582189f7394b93e93476738fd1de7cf483e1f99dfb27e00a7c345a393eefe18c610ed9610ecf610ec9610ec361015f610e40565b94610b0a565b93610b0a565b9361037360405190565b0390a3565b906102ea91610d5f565b906102ea939291610ef76120f9565b906102ea939291610f066121b3565b90610d8b939291610f1561221c565b6110d7565b15610f2157565b60405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b15610f6657565b60405162461bcd60e51b815260206004820152600c60248201526b456d7074792061727261797360a01b6044820152606490fd5b15610fa157565b60405162461bcd60e51b815260206004820152601460248201527342617463682073697a6520746f6f206c6172676560601b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b9190811015611003576020020190565b610fdd565b35610293816102cd565b35610293816102ec565b9061027e81602093610644565b506102939060208101906102dd565b818352602090920191906000825b828210611054575050505090565b9091929361107761107060019261106b8886611029565b61101c565b9560200190565b93920190611046565b9037565b8183529091602001916001600160fb1b038111610217578291602061027e9202938491611080565b92906110c990610293959360408601918683036000880152611038565b926020818503910152611084565b929080936110e7835b8614610f1a565b6000956110fd6110f688610c42565b8711610f5f565b61111261110a6064610c42565b871115610f9a565b61111b87610c42565b865b8110156111a9576111a2816111518a610e68610c16610e5a61114b61114661111d998d8d610ff3565b611008565b93610da0565b611177611167611162838a8c610ff3565b611012565b610e7e6111738d610c42565b9190565b61119c611188611146838989610ff3565b611196611162848b8d610ff3565b906123dd565b60010190565b905061111b565b509550917f95eb041e116443e44d5e5f89bba504bd288df2a00235f6996ba6d0cee74f14a19450610d4791936111de60405190565b948594856110ac565b906102ea939291610ee8565b906102ea91611204610be530610b0a565b6102ea9160019161121481611ee9565b611f9a565b906102ea916111f3565b1561122a57565b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608490fd5b610293906112d26112a030610b0a565b6112cc610c167f00000000000000000000000000000000000000000000000000000000000000006102c1565b14611223565b611300565b6102937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610c42565b506102936112d7565b6102936000611290565b610293610162610e40565b61029390610add565b610293905461131e565b61029360fb611327565b906102ea93929161134a6120f9565b906102ea9392916113596121b3565b90610d8b93929161136861221c565b92908093611375836110e0565b6000956113846110f688610c42565b61139161110a6064610c42565b61139a87610c42565b865b811015611402576113fb816113c58a610e68610c16610e5a61114b61114661139c998d8d610ff3565b6113d6611167611162838a8c610ff3565b61119c6113e7611146838989610ff3565b6113f5611162848b8d610ff3565b906122a7565b905061139a565b509550917fb2d52f51d17f6a36667bdd9225bf0f8b6a5e043af71d7ab20c3bb5047089eacf9450610d4791936111de60405190565b906102ea93929161133b565b9061144d90610b0a565b600052602052604060002090565b6114726102939161146a600090565b506033611443565b610a69565b61147f6120f9565b6102ea6102ea61148f6000610da0565b61246b565b6102ea611477565b6114a46120f9565b6102ea6114af6124ff565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d3c60405190565b6102ea61149c565b6102936065610e40565b6102936037610a3f565b906102ea916115026120f9565b906102ea9161150f6121b3565b90610d8b9161151c61221c565b61152c610e5f610e5a6000610da0565b611539610e7c6000610c42565b61154382826123dd565b7feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf610ed9610ecf610ec9610ec361015f610e40565b906102ea916114f5565b1561158957565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b610a5d9190610cf933926115f08385611b95565b6115fc82821015611582565b0390565b6102ea9061160c6120f9565b6116ae565b1561161857565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e206164647265737300006044820152606490fd5b90600019905b9181191691161790565b9061167d61029361168492610c42565b825461165d565b9055565b906001600160a01b0390611663565b906116a761029361168492610b0a565b8254611688565b6116ce6116be610e5a6000610da0565b6116c7836102c1565b1415611611565b6116ed6116e56116df610160610a69565b42610cce565b61016161166d565b6116f981610162611697565b7fea80d7bcdb5b960a75976c0e94d2d4b2077378cfea983c73b49501b8613da22461173561172b610ec9610161610a69565b9261037360405190565b0390a2565b6102ea90611600565b6102939060081c610add565b6102939054611743565b1561176057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b9060ff90611663565b610add6102936102939260ff1690565b906117e5610293611684926117c5565b82546117bc565b9061ff009060081b611663565b9061180961029361168492151590565b82546117ec565b61032290610ad0565b6020810192916102ea9190611810565b9391611877939161184161183d600061174f565b1590565b958680611914575b80156118cf575b61185990611759565b8661186e6118676001610ad0565b60006117d5565b6118be57611a8e565b61187d57565b6118886000806117f9565b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986118b260405190565b80610d47600182611819565b6118ca600160006117f9565b611a8e565b506118e461183d6118df30610b0a565b612507565b801561185057506118596118f86000611327565b61190c6119056001610ad0565b9160ff1690565b149050611850565b5061191f6000611327565b61192c6119056001610ad0565b10611849565b1561193957565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c696420746f6b656e206e616d6560701b6044820152606490fd5b1561197a57565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b881cde5b589bdb60621b6044820152606490fd5b156119bd57565b60405162461bcd60e51b815280610acc600482016020808252818101527f496e76616c696420756e6465726c79696e672061737365742061646472657373604082015260600190565b15611a0d57565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152606490fd5b15611a5157565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420757067726164652064656c617960581b6044820152606490fd5b611b4e92611b3e6102ea969593611b4693611b1c611b0c611af0611ab6611ab28590565b5190565b611ace600091611ac861117384610c42565b11611932565b611aeb611ad9875190565b611ae561117384610c42565b11611973565b610da0565b610e5a611afc826102c1565b611b05896102c1565b14156119b6565b611b15886102c1565b1415611a06565b611b27610e10610c42565b88101580611b6e575b611b3990611a4a565b61259a565b61015f611697565b61094b6125bc565b611b566125d1565b611b5e6125f1565b611b66612611565b61016061166d565b50611b39611b7e62278d00610c42565b8911159050611b30565b906102ea94939291611829565b61029391611bb061147292611ba8600090565b506034611443565b611443565b6102ea90611bc16120f9565b611c21565b15611bcd57565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6102ea9061148f611c35610e5a6000610da0565b611c3e836102c1565b1415611bc6565b6102ea90611bb5565b15611c5557565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b15611cad57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b610ed9610ecf610ec97f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593611d64611d54611d386000610da0565b610e5a611d44826102c1565b611d4d866102c1565b1415611c4e565b611d5d886102c1565b1415611ca6565b611d7c87611d7788611bb0856034611443565b61166d565b610b0a565b6102936000611d916102936112d7565b01610e40565b6102ea90611da36120f9565b611e72565b15611daf57565b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606490fd5b15611df457565b60405162461bcd60e51b8152602060048201526014602482015273151a5b595b1bd8dac81b9bdd08195b185c1cd95960621b6044820152606490fd5b15611e3757565b60405162461bcd60e51b8152602060048201526013602482015272139bc81d5c19dc985919481c1c9bdc1bdcd959606a1b6044820152606490fd5b611e8d90611e87610c16610e5a610162610e40565b14611da8565b611ea6611e9e610293610161610a69565b421015611ded565b611ec7611eb4610161610a69565b611ec16111736000610c42565b11611e30565b611ed46116e56000610c42565b6102ea611ee16000610da0565b610162611697565b6102ea90611d97565b6102937f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143610c42565b905051906102ea826102ec565b906020828203126102175761029391611f1b565b15611f4357565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9190611fb26000611fac610293611ef2565b01611327565b15611fc25750506102ea906126ba565b611fce611d7c84610b0a565b926020611fda60405190565b6352d1902d60e01b815294859060049082905afa60009481612078575b506120585760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b6120736102ea9461206d6111736102936112d7565b14611f3c565b612619565b61209b91955060203d6020116120a2575b6120938183610534565b810190611f28565b9338611ff7565b503d612089565b156120b057565b60405162461bcd60e51b815280610acc600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6102ea6121046114e1565b612110610c16336102c1565b146120a9565b61211e612725565b6102ea612136565b906117e561029361168492151590565b612142600060fb612126565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d4733610678565b6102ea612116565b1561217b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6102ea6121c161183d611331565b612174565b6102936002610c42565b156121d757565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6102ea61222a61012d610a69565b61223e6122356121c6565b918214156121d0565b61012d61166d565b6102936001610c42565b6102ea61223e612246565b1561226257565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ed9610ecf610ec96122db6000610da0565b6122f76122e7826102c1565b6122f0886102c1565b141561225b565b61230f61230888610cf46035610a69565b603561166d565b611d7c61231d876033611443565b61232a8961027e83610a69565b9061166d565b1561233757565b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b1561238d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ed9610ecf610ec96124116000610da0565b9461242e61241e876102c1565b612427836102c1565b1415612330565b61245a61244f88612443611472856033611443565b6115fc82821015612386565b611d77836033611443565b611d7c612308886115fc6035610a69565b61248c61248661247b6065610e40565b611d7c846065611697565b91610b0a565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06124b760405190565b8080610ed9565b6124c66121b3565b6102ea6124d5600160fb612126565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d4733610678565b6102ea6124be565b3b6125156111736000610c42565b1190565b1561252057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b906102ea9161259061258b600061174f565b612519565b906102ea916128f8565b906102ea91612579565b6125b161258b600061174f565b6102ea6102ea612919565b6102ea6125a4565b6102ea61258b600061174f565b6102ea6125c4565b6125e661258b600061174f565b6102ea6102ea61293d565b6102ea6125d9565b61260661258b600061174f565b6102ea6102ea612952565b6102ea6125f9565b916126238361295a565b81516126326111736000610c42565b11908115612650575b50612644575050565b61264d916129e3565b50565b90503861263b565b1561265f57565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b6102ea906126cf6126ca82612507565b612658565b60006126dc6102936112d7565b01611697565b156126e957565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b6102ea612730611331565b6126e2565b906102ea9161274761258b600061174f565b6128e2565b9160001960089290920291821b911b611663565b919061277161029361168493610c42565b90835461274c565b6102ea91600091612760565b818110612790575050565b8061279e6000600193612779565b01612785565b9190601f81116127b357505050565b6127c56102ea93600052602060002090565b906020601f8401819004830193106127e7575b6020601f909101040190612785565b90915081906127d8565b9060001960089091021c191690565b8161280a916127f1565b906002021790565b9061281b815190565b906001600160401b0382116105555761283e826128388554610966565b856127a4565b602090601f831160011461286c57611684929160009183612861575b5050612800565b01519050388061285a565b601f1983169161288185600052602060002090565b9260005b8181106128c0575091600293918560019694106128a6575b50505002019055565b6128b6910151601f8416906127f1565b905538808061289d565b91936020600181928787015181550195019201612885565b906102ea91612812565b906128f16102ea9260366128d8565b60376128d8565b906102ea91612735565b61290f61258b600061174f565b6102ea803361246b565b6102ea612902565b61292e61258b600061174f565b6102ea6102ea600060fb612126565b6102ea612921565b610d8b61258b600061174f565b6102ea612945565b61296790611d7c816126ba565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b61299160405190565b8080611735565b6129a26027610c4f565b7f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020820152660819985a5b195960ca1b604082015290565b610293612998565b610293916129ef6129db565b91612a14565b3d15612a0f57612a043d610c4f565b903d6000602084013e565b606090565b6000806102939493612a24606090565b50602081519101845af4612a366129f5565b91612a88565b15612a4357565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b91929015612aba57508151612aa06111736000610c42565b14612aa9575090565b612ab561029391612507565b612a3c565b8290612ac4825190565b612ad16111736000610c42565b1115612ae05750805190602001fd5b610acc90612aed60405190565b62461bcd60e51b81529182916004830161028256fea2646970667358221220f31ccf6ad8008c22a45972b42d50a95fedc8d283ba66432add55f3c0b33d8d0364736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c806306fdde0314610212578063095ea7b31461020d57806318160ddd1461020857806323b872dd14610203578063313ce567146101fe5780633659cfe6146101f957806339509351146101f45780633f4ba83a146101ef57806340381738146101ea57806340c10f19146101e55780634a6cc677146101e05780634f1ef286146101db57806352d1902d146101d65780635ac22bf8146101d15780635c975abb146101cc578063651eebfe146101c757806368573107146101c257806370a08231146101bd578063715018a6146101b85780637158da7c146101b35780637e48d4ea146101ae5780638456cb59146101a95780638da5cb5b146101a457806395d89b411461019f5780639dc29fac1461019a578063a457c2d714610195578063a9059cbb14610190578063bb057c5e1461018b578063c915fc9314610186578063c9aba0aa14610181578063dd62ed3e1461017c5763f2fde38b0361021757610938565b61091c565b6108dd565b61085c565b610841565b61081e565b610802565b6107e9565b6107ce565b6107b3565b61079b565b610780565b610758565b610714565b6106f9565b6106dd565b6106c2565b610684565b61065d565b610629565b610615565b610502565b61046e565b610453565b61043b565b61041f565b610402565b6103bf565b6103a9565b610354565b610326565b610296565b600080fd5b600091031261021757565b60005b83811061023a5750506000910152565b818101518382015260200161022a565b61026b61027460209361027e9361025f815190565b80835293849260200190565b95869101610227565b601f01601f191690565b0190565b60208082526102939291019061024a565b90565b34610217576102a636600461021c565b6102bd6102b1610a48565b60405191829182610282565b0390f35b6001600160a01b031690565b6102d6816102c1565b0361021757565b905035906102ea826102cd565b565b806102d6565b905035906102ea826102ec565b91906040838203126102175761029390602061031b82866102dd565b94016102f2565b9052565b34610217576102bd61034261033c3660046102ff565b90610a52565b60405191829182901515815260200190565b346102175761036436600461021c565b6102bd61036f610a73565b6040515b9182918290815260200190565b90916060828403126102175761029361039984846102dd565b93604061031b82602087016102dd565b34610217576103b9366004610380565b91610a7d565b34610217576103cf36600461021c565b6102bd6103da610ae3565b6040519182918260ff909116815260200190565b9060208282031261021757610293916102dd565b346102175761041a6104153660046103ee565b610caf565b604051005b34610217576102bd6103426104353660046102ff565b90610ce0565b346102175761044b36600461021c565b61041a610d4c565b346102175761046336600461021c565b6102bd61036f610d54565b346102175761041a6104813660046102ff565b90610ede565b909182601f83011215610217578135916001600160401b03831161021757602001926020830284011161021757565b90916040828403126102175781356001600160401b03811161021757836104de918401610487565b92909360208201356001600160401b038111610217576104fe9201610487565b9091565b346102175761041a6105153660046104b6565b929190916111e7565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761055557604052565b61051e565b906102ea61056760405190565b9283610534565b6001600160401b03811161055557602090601f01601f19160190565b90826000939282370152565b909291926105ab6105a68261056e565b61055a565b9381855281830111610217576102ea91602085019061058a565b9080601f830112156102175781602061029393359101610596565b919091604081840312610217576105f783826102dd565b9260208201356001600160401b0381116102175761029392016105c5565b61041a6106233660046105e0565b90611219565b346102175761063936600461021c565b6102bd61036f611309565b610322906102c1565b6020810192916102ea9190610644565b346102175761066d36600461021c565b6102bd610678611313565b6040519182918261064d565b346102175761069436600461021c565b6102bd610342611331565b610293916008021c81565b90610293915461069f565b61029360006101616106aa565b34610217576106d236600461021c565b6102bd61036f6106b5565b346102175761041a6106f03660046104b6565b92919091611437565b34610217576102bd61036f61070f3660046103ee565b61145b565b346102175761072436600461021c565b61041a611494565b610293916008021c6001600160a01b031690565b90610293915461072c565b610293600061015f610740565b346102175761076836600461021c565b6102bd61067861074b565b61029360006101606106aa565b346102175761079036600461021c565b6102bd61036f610773565b34610217576107ab36600461021c565b61041a6114d9565b34610217576107c336600461021c565b6102bd6106786114e1565b34610217576107de36600461021c565b6102bd6102b16114eb565b346102175761041a6107fc3660046102ff565b90611578565b34610217576102bd6103426108183660046102ff565b906115dc565b346102175761082e3660046102ff565b90610a7d565b6102936000610162610740565b346102175761085136600461021c565b6102bd610678610834565b346102175761041a61086f3660046103ee565b61173a565b919060a0838203126102175782356001600160401b038111610217578161089c9185016105c5565b9260208101356001600160401b03811161021757826108bc9183016105c5565b926102936108cd84604085016102dd565b93608061031b82606087016102dd565b346102175761041a6108f0366004610874565b93929092611b88565b91906040838203126102175761029390602061091582866102dd565b94016102dd565b34610217576102bd61036f6109323660046108f9565b90611b95565b346102175761041a61094b3660046103ee565b611c45565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610986575b602083101461098157565b610950565b91607f1691610976565b805460009392916109ad6109a383610966565b8085529360200190565b91600181169081156109ff57506001146109c657505050565b6109d99192939450600052602060002090565b916000925b8184106109eb5750500190565b8054848401526020909301926001016109de565b92949550505060ff1916825215156020020190565b9061029391610990565b906102ea610a3892610a2f60405190565b93848092610a14565b0383610534565b61029390610a1e565b6102936036610a3f565b610a5d919033611cfd565b600190565b6102939081565b6102939054610a62565b6102936035610a69565b60405162461bcd60e51b815260206004820152602160248201527f44656274546f6b656e3a205472616e7366657273206172652064697361626c656044820152601960fa1b6064820152608490fd5b0390fd5b610add6102936102939290565b60ff1690565b6102936012610ad0565b610293906102c1906001600160a01b031682565b61029390610aed565b61029390610b01565b15610b1a57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610b7b57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b6102ea90610c3d610be530610b0a565b610c237f000000000000000000000000000000000000000000000000000000000000000091610c1c610c16846102c1565b916102c1565b1415610b13565b610c37610c16610c31611d81565b926102c1565b14610b74565b610c89565b6102936102936102939290565b90610c5c6105a68361056e565b918252565b369037565b906102ea610c7c610c7684610c4f565b9361056e565b601f190160208401610c61565b60006102ea91610c9881611ee9565b610ca9610ca483610c42565b610c66565b90611f9a565b6102ea90610bd5565b634e487b7160e01b600052601160045260246000fd5b91908201809211610cdb57565b610cb8565b610a5d9190610cf93392610cf48385611b95565b610cce565b91611cfd565b610d076120f9565b6102ea610d1261216c565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d3c60405190565b80610d47338261064d565b0390a1565b6102ea610cff565b610293610161610a69565b906102ea91610d6c6120f9565b906102ea91610d796121b3565b90610d8b91610d8661221c565b610e4a565b6102ea612250565b6102c16102936102939290565b61029390610d93565b15610db057565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b15610dee57565b60405162461bcd60e51b815280610acc600482016020808252818101527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604082015260600190565b610293906102c1565b6102939054610e37565b610e6f610e5f610e5a6000610da0565b6102c1565b610e68836102c1565b1415610da9565b610e84610e7c6000610c42565b835b11610de7565b610e8e82826122a7565b7f582189f7394b93e93476738fd1de7cf483e1f99dfb27e00a7c345a393eefe18c610ed9610ecf610ec9610ec361015f610e40565b94610b0a565b93610b0a565b9361037360405190565b0390a3565b906102ea91610d5f565b906102ea939291610ef76120f9565b906102ea939291610f066121b3565b90610d8b939291610f1561221c565b6110d7565b15610f2157565b60405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b15610f6657565b60405162461bcd60e51b815260206004820152600c60248201526b456d7074792061727261797360a01b6044820152606490fd5b15610fa157565b60405162461bcd60e51b815260206004820152601460248201527342617463682073697a6520746f6f206c6172676560601b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b9190811015611003576020020190565b610fdd565b35610293816102cd565b35610293816102ec565b9061027e81602093610644565b506102939060208101906102dd565b818352602090920191906000825b828210611054575050505090565b9091929361107761107060019261106b8886611029565b61101c565b9560200190565b93920190611046565b9037565b8183529091602001916001600160fb1b038111610217578291602061027e9202938491611080565b92906110c990610293959360408601918683036000880152611038565b926020818503910152611084565b929080936110e7835b8614610f1a565b6000956110fd6110f688610c42565b8711610f5f565b61111261110a6064610c42565b871115610f9a565b61111b87610c42565b865b8110156111a9576111a2816111518a610e68610c16610e5a61114b61114661111d998d8d610ff3565b611008565b93610da0565b611177611167611162838a8c610ff3565b611012565b610e7e6111738d610c42565b9190565b61119c611188611146838989610ff3565b611196611162848b8d610ff3565b906123dd565b60010190565b905061111b565b509550917f95eb041e116443e44d5e5f89bba504bd288df2a00235f6996ba6d0cee74f14a19450610d4791936111de60405190565b948594856110ac565b906102ea939291610ee8565b906102ea91611204610be530610b0a565b6102ea9160019161121481611ee9565b611f9a565b906102ea916111f3565b1561122a57565b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608490fd5b610293906112d26112a030610b0a565b6112cc610c167f00000000000000000000000000000000000000000000000000000000000000006102c1565b14611223565b611300565b6102937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610c42565b506102936112d7565b6102936000611290565b610293610162610e40565b61029390610add565b610293905461131e565b61029360fb611327565b906102ea93929161134a6120f9565b906102ea9392916113596121b3565b90610d8b93929161136861221c565b92908093611375836110e0565b6000956113846110f688610c42565b61139161110a6064610c42565b61139a87610c42565b865b811015611402576113fb816113c58a610e68610c16610e5a61114b61114661139c998d8d610ff3565b6113d6611167611162838a8c610ff3565b61119c6113e7611146838989610ff3565b6113f5611162848b8d610ff3565b906122a7565b905061139a565b509550917fb2d52f51d17f6a36667bdd9225bf0f8b6a5e043af71d7ab20c3bb5047089eacf9450610d4791936111de60405190565b906102ea93929161133b565b9061144d90610b0a565b600052602052604060002090565b6114726102939161146a600090565b506033611443565b610a69565b61147f6120f9565b6102ea6102ea61148f6000610da0565b61246b565b6102ea611477565b6114a46120f9565b6102ea6114af6124ff565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d3c60405190565b6102ea61149c565b6102936065610e40565b6102936037610a3f565b906102ea916115026120f9565b906102ea9161150f6121b3565b90610d8b9161151c61221c565b61152c610e5f610e5a6000610da0565b611539610e7c6000610c42565b61154382826123dd565b7feef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf610ed9610ecf610ec9610ec361015f610e40565b906102ea916114f5565b1561158957565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b610a5d9190610cf933926115f08385611b95565b6115fc82821015611582565b0390565b6102ea9061160c6120f9565b6116ae565b1561161857565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e206164647265737300006044820152606490fd5b90600019905b9181191691161790565b9061167d61029361168492610c42565b825461165d565b9055565b906001600160a01b0390611663565b906116a761029361168492610b0a565b8254611688565b6116ce6116be610e5a6000610da0565b6116c7836102c1565b1415611611565b6116ed6116e56116df610160610a69565b42610cce565b61016161166d565b6116f981610162611697565b7fea80d7bcdb5b960a75976c0e94d2d4b2077378cfea983c73b49501b8613da22461173561172b610ec9610161610a69565b9261037360405190565b0390a2565b6102ea90611600565b6102939060081c610add565b6102939054611743565b1561176057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b9060ff90611663565b610add6102936102939260ff1690565b906117e5610293611684926117c5565b82546117bc565b9061ff009060081b611663565b9061180961029361168492151590565b82546117ec565b61032290610ad0565b6020810192916102ea9190611810565b9391611877939161184161183d600061174f565b1590565b958680611914575b80156118cf575b61185990611759565b8661186e6118676001610ad0565b60006117d5565b6118be57611a8e565b61187d57565b6118886000806117f9565b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986118b260405190565b80610d47600182611819565b6118ca600160006117f9565b611a8e565b506118e461183d6118df30610b0a565b612507565b801561185057506118596118f86000611327565b61190c6119056001610ad0565b9160ff1690565b149050611850565b5061191f6000611327565b61192c6119056001610ad0565b10611849565b1561193957565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c696420746f6b656e206e616d6560701b6044820152606490fd5b1561197a57565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b881cde5b589bdb60621b6044820152606490fd5b156119bd57565b60405162461bcd60e51b815280610acc600482016020808252818101527f496e76616c696420756e6465726c79696e672061737365742061646472657373604082015260600190565b15611a0d57565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152606490fd5b15611a5157565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420757067726164652064656c617960581b6044820152606490fd5b611b4e92611b3e6102ea969593611b4693611b1c611b0c611af0611ab6611ab28590565b5190565b611ace600091611ac861117384610c42565b11611932565b611aeb611ad9875190565b611ae561117384610c42565b11611973565b610da0565b610e5a611afc826102c1565b611b05896102c1565b14156119b6565b611b15886102c1565b1415611a06565b611b27610e10610c42565b88101580611b6e575b611b3990611a4a565b61259a565b61015f611697565b61094b6125bc565b611b566125d1565b611b5e6125f1565b611b66612611565b61016061166d565b50611b39611b7e62278d00610c42565b8911159050611b30565b906102ea94939291611829565b61029391611bb061147292611ba8600090565b506034611443565b611443565b6102ea90611bc16120f9565b611c21565b15611bcd57565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6102ea9061148f611c35610e5a6000610da0565b611c3e836102c1565b1415611bc6565b6102ea90611bb5565b15611c5557565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b15611cad57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b610ed9610ecf610ec97f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593611d64611d54611d386000610da0565b610e5a611d44826102c1565b611d4d866102c1565b1415611c4e565b611d5d886102c1565b1415611ca6565b611d7c87611d7788611bb0856034611443565b61166d565b610b0a565b6102936000611d916102936112d7565b01610e40565b6102ea90611da36120f9565b611e72565b15611daf57565b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606490fd5b15611df457565b60405162461bcd60e51b8152602060048201526014602482015273151a5b595b1bd8dac81b9bdd08195b185c1cd95960621b6044820152606490fd5b15611e3757565b60405162461bcd60e51b8152602060048201526013602482015272139bc81d5c19dc985919481c1c9bdc1bdcd959606a1b6044820152606490fd5b611e8d90611e87610c16610e5a610162610e40565b14611da8565b611ea6611e9e610293610161610a69565b421015611ded565b611ec7611eb4610161610a69565b611ec16111736000610c42565b11611e30565b611ed46116e56000610c42565b6102ea611ee16000610da0565b610162611697565b6102ea90611d97565b6102937f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143610c42565b905051906102ea826102ec565b906020828203126102175761029391611f1b565b15611f4357565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9190611fb26000611fac610293611ef2565b01611327565b15611fc25750506102ea906126ba565b611fce611d7c84610b0a565b926020611fda60405190565b6352d1902d60e01b815294859060049082905afa60009481612078575b506120585760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b6120736102ea9461206d6111736102936112d7565b14611f3c565b612619565b61209b91955060203d6020116120a2575b6120938183610534565b810190611f28565b9338611ff7565b503d612089565b156120b057565b60405162461bcd60e51b815280610acc600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6102ea6121046114e1565b612110610c16336102c1565b146120a9565b61211e612725565b6102ea612136565b906117e561029361168492151590565b612142600060fb612126565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d4733610678565b6102ea612116565b1561217b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6102ea6121c161183d611331565b612174565b6102936002610c42565b156121d757565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6102ea61222a61012d610a69565b61223e6122356121c6565b918214156121d0565b61012d61166d565b6102936001610c42565b6102ea61223e612246565b1561226257565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ed9610ecf610ec96122db6000610da0565b6122f76122e7826102c1565b6122f0886102c1565b141561225b565b61230f61230888610cf46035610a69565b603561166d565b611d7c61231d876033611443565b61232a8961027e83610a69565b9061166d565b1561233757565b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b1561238d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ed9610ecf610ec96124116000610da0565b9461242e61241e876102c1565b612427836102c1565b1415612330565b61245a61244f88612443611472856033611443565b6115fc82821015612386565b611d77836033611443565b611d7c612308886115fc6035610a69565b61248c61248661247b6065610e40565b611d7c846065611697565b91610b0a565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06124b760405190565b8080610ed9565b6124c66121b3565b6102ea6124d5600160fb612126565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d4733610678565b6102ea6124be565b3b6125156111736000610c42565b1190565b1561252057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b906102ea9161259061258b600061174f565b612519565b906102ea916128f8565b906102ea91612579565b6125b161258b600061174f565b6102ea6102ea612919565b6102ea6125a4565b6102ea61258b600061174f565b6102ea6125c4565b6125e661258b600061174f565b6102ea6102ea61293d565b6102ea6125d9565b61260661258b600061174f565b6102ea6102ea612952565b6102ea6125f9565b916126238361295a565b81516126326111736000610c42565b11908115612650575b50612644575050565b61264d916129e3565b50565b90503861263b565b1561265f57565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b6102ea906126cf6126ca82612507565b612658565b60006126dc6102936112d7565b01611697565b156126e957565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b6102ea612730611331565b6126e2565b906102ea9161274761258b600061174f565b6128e2565b9160001960089290920291821b911b611663565b919061277161029361168493610c42565b90835461274c565b6102ea91600091612760565b818110612790575050565b8061279e6000600193612779565b01612785565b9190601f81116127b357505050565b6127c56102ea93600052602060002090565b906020601f8401819004830193106127e7575b6020601f909101040190612785565b90915081906127d8565b9060001960089091021c191690565b8161280a916127f1565b906002021790565b9061281b815190565b906001600160401b0382116105555761283e826128388554610966565b856127a4565b602090601f831160011461286c57611684929160009183612861575b5050612800565b01519050388061285a565b601f1983169161288185600052602060002090565b9260005b8181106128c0575091600293918560019694106128a6575b50505002019055565b6128b6910151601f8416906127f1565b905538808061289d565b91936020600181928787015181550195019201612885565b906102ea91612812565b906128f16102ea9260366128d8565b60376128d8565b906102ea91612735565b61290f61258b600061174f565b6102ea803361246b565b6102ea612902565b61292e61258b600061174f565b6102ea6102ea600060fb612126565b6102ea612921565b610d8b61258b600061174f565b6102ea612945565b61296790611d7c816126ba565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b61299160405190565b8080611735565b6129a26027610c4f565b7f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020820152660819985a5b195960ca1b604082015290565b610293612998565b610293916129ef6129db565b91612a14565b3d15612a0f57612a043d610c4f565b903d6000602084013e565b606090565b6000806102939493612a24606090565b50602081519101845af4612a366129f5565b91612a88565b15612a4357565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b91929015612aba57508151612aa06111736000610c42565b14612aa9575090565b612ab561029391612507565b612a3c565b8290612ac4825190565b612ad16111736000610c42565b1115612ae05750805190602001fd5b610acc90612aed60405190565b62461bcd60e51b81529182916004830161028256fea2646970667358221220f31ccf6ad8008c22a45972b42d50a95fedc8d283ba66432add55f3c0b33d8d0364736f6c63430008180033",
  "immutableReferences": {
    "1339": [
      {
        "length": 32,
        "start": 3050
      },
      {
        "length": 32,
        "start": 4776
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "913:8745:59:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;952:2730:14:-;;677:2430:13;;:::i;913:8745:59:-;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;:::i;:::-;;;;:::i;949:3965:12:-;1190:13;1198:4;1190:13;:::i;:::-;;;949:3965::o",
  "deployedSourceMap": "913:8745:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;913:8745:59;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;913:8745:59;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;913:8745:59;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;913:8745:59;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;913:8745:59;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;913:8745:59;;;;;;;;-1:-1:-1;;913:8745:59;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;1354:34::-;;;;;:::i;913:8745::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;:::i;1154:30::-;;;;;:::i;913:8745::-;;;;;;;;:::i;:::-;;;;:::i;1251:27::-;;;;;:::i;913:8745::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;1464:37::-;;;;;:::i;913:8745::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2516:98:15:-;2595:12;2602:5;2595:12;:::i;4802:197::-;4964:6;;;965:10:21;4964:6:15;:::i;:::-;4988:4;4802:197;:::o;913:8745:59:-;;;;;;;;;;:::i;3613:106:15:-;3700:12;;;:::i;9505:150:59:-;913:8745;;-1:-1:-1;;;9604:43:59;;913:8745;9604:43;;;913:8745;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;;;;;913:8745;;;;;;;;;;;;3462:91:15;3537:9;3544:2;3537:9;:::i;913:8745:59:-;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;1708:226:12;1926:1;1708:226;1829:87;1747:13;1755:4;1747:13;:::i;:::-;1739:80;1764:6;1747:23;;;;;:::i;:::-;;;:::i;:::-;;;1739:80;:::i;:::-;1837:30;;:20;;:::i;:::-;:30;;:::i;:::-;;1829:87;:::i;:::-;1926:1;:::i;913:8745:59:-;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;913:8745:59;;;;;:::i;3408:195:12:-;3586:1;3590:5;3408:195;3507:17;;;:::i;:::-;3576:12;;;;:::i;:::-;;:::i;:::-;3590:5;;:::i;3408:195::-;;;;:::i;913:8745:59:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;6212:234:15:-;6379:38;;;;965:10:21;6379:25:15;;;;;:::i;:::-;:38;:::i;:::-;;;:::i;1324:62:6:-;;;:::i;:::-;1378:1;7063:103:59;;:::i;:::-;7138:20;;913:8745;;;;7138:20;7147:10;7138:20;7147:10;7138:20;;:::i;:::-;;;;7063:103::o;:::-;;;:::i;8973:111::-;9057:19;;;:::i;1324:62:6:-;;1378:1;1324:62;;;:::i;:::-;1468:72:13;1532:1;1468:72;;;:::i;:::-;2492:103:14;2557:1;2492:103;;;:::i;:::-;2557:1;:::i;:::-;;;:::i;913:8745:59:-;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3833:300::-;3932:44;3940:16;3946:10;3954:1;3946:10;:::i;:::-;3940:16;:::i;:::-;;;;:::i;:::-;;;3932:44;:::i;:::-;3987:55;3995:10;3954:1;3995:10;:::i;:::-;;;;3987:55;:::i;:::-;4063:6;;;;:::i;:::-;4086:39;;;;4101:15;;;:::i;:::-;4086:39;;:::i;:::-;;;:::i;:::-;;;913:8745;;;;4086:39;;;;3833:300::o;:::-;;;;;:::i;1324:62:6:-;;1378:1;1324:62;;;;;:::i;:::-;1468:72:13;1532:1;1468:72;;;;;:::i;:::-;2492:103:14;2557:1;2492:103;;;;;:::i;:::-;2557:1;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;6089:635::-;;;;6249:14;6222:68;6249:14;6230:33;;;6222:68;:::i;:::-;6327:1;6309:19;6301:44;6309:19;;;:::i;:::-;;;6301:44;:::i;:::-;6356:55;6364:22;6383:3;6364:22;:::i;:::-;;;;6356:55;:::i;:::-;6427:13;;;:::i;:::-;6442:19;;;;;;;6463:3;6491:11;6483:53;6491:11;:25;;6506:10;6491:11;;6442:19;6491:11;;;;:::i;:::-;;:::i;:::-;6506:10;;:::i;6483:53::-;6551:59;6559:10;;;;;;:::i;:::-;;:::i;:::-;:14;;;;:::i;:::-;;913:8745;;6551:59;6644:10;6631:11;;;;;;:::i;:::-;6644:10;;;;;;:::i;:::-;;;:::i;:::-;913:8745;;;;6463:3;6427:13;;;;6442:19;;;;;6682:34;6442:19;;6682:34;6442:19;;6682:34;913:8745;;;;6682:34;;;;;;:::i;6089:635::-;;;;;;;:::i;1708:226:12:-;;1926:1;1708:226;1829:87;1747:13;1755:4;1747:13;:::i;1829:87::-;4130:4;3922:220;4130:4;3922:220;4055:17;;;:::i;:::-;4130:4;:::i;3922:220::-;;;;;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;2140:144:12;2276:1;2140:144;2174:92;2182:13;2190:4;2182:13;:::i;:::-;:23;;2199:6;2182:23;:::i;:::-;;2174:92;:::i;:::-;2276:1;:::i;1131:115:9:-;1180:66;;;:::i;3027:131:12:-;3131:20;;;:::i;3027:131::-;3105:7;913:8745:59;3105:7:12;:::i;8700:117:59:-;8787:22;;;:::i;913:8745::-;;;;;;;;;;:::i;1879:84:13:-;1949:7;;;:::i;1324:62:6:-;;1378:1;1324:62;;;;;:::i;:::-;1468:72:13;1532:1;1468:72;;;;;:::i;:::-;2492:103:14;2557:1;2492:103;;;;;:::i;:::-;5097:651:59;;;5261:14;5232:70;5261:14;5240:35;913:8745::o;5232:70::-;5341:1;5321:21;5313:46;5321:21;;;:::i;5313:46::-;5370:57;5378:24;5399:3;5378:24;:::i;5370:57::-;5443:13;;;:::i;:::-;5458:21;;;;;;;5481:3;5509:13;5501:55;5509:13;:27;;5526:10;5509:13;;5458:21;5509:13;;;;:::i;5501:55::-;5571:59;5579:10;;;;;;:::i;5571:59::-;5666:10;5651:13;;;;;;:::i;:::-;5666:10;;;;;;:::i;:::-;;;:::i;5481:3::-;5443:13;;;;5458:21;;;;;5704:36;5458:21;;5704:36;5458:21;;5704:36;913:8745;;;;5097:651;;;;;;;:::i;913:8745::-;;;;;:::i;:::-;;;;;;;;;:::o;3777:125:15:-;3877:18;;3777:125;3851:7;913:8745:59;;;3851:7:15;3877:18;:9;:18;:::i;:::-;;:::i;1324:62:6:-;;;:::i;:::-;1378:1;2168:10;;2176:1;2168:10;:::i;:::-;;:::i;2085:101::-;;;:::i;1324:62::-;;;:::i;:::-;1378:1;6844:97:59;;:::i;:::-;6915:18;;913:8745;;;;6844:97;;;:::i;1462:85:6:-;1534:6;;;:::i;2727:102:15:-;2808:14;2815:7;2808:14;:::i;1324:62:6:-;;1378:1;1324:62;;;:::i;:::-;1468:72:13;1532:1;1468:72;;;:::i;:::-;2492:103:14;2557:1;2492:103;;;:::i;:::-;4552:46:59;4560:18;4568:10;4576:1;4568:10;:::i;4552:46::-;4609:55;4617:10;4576:1;4617:10;:::i;4609:55::-;4687:6;;;;:::i;:::-;4710:41;;;;4727:15;;;:::i;4451:308::-;;;;;:::i;913:8745::-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;6933:427:15;7286:34;;;;965:10:21;7107:25:15;;;;;:::i;:::-;7142:85;7150:35;;;;7142:85;:::i;:::-;913:8745:59;;;1324:62:6;1378:1;1324:62;;;:::i;:::-;1378:1;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;;;9604:43;913:8745;;-1:-1:-1;;913:8745:59;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;:::i;:::-;;;;:::i;7466:350::-;7547:74;7555:31;7576:10;7584:1;7576:10;:::i;7555:31::-;;;;:::i;:::-;;;7547:74;:::i;:::-;7632:52;7654:30;7672:12;;;:::i;:::-;7654:15;:30;:::i;:::-;7632:52;;:::i;:::-;7695:42;;;;:::i;:::-;7753:55;;;7788:19;;;:::i;7753:55::-;;;913:8745;;;;7753:55;;;;7466:350::o;:::-;;;;:::i;913:8745::-;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;3246:506:11:-;;;3636:1;3246:506;;3301:14;3302:13;;;:::i;:::-;3301:14;;913:8745:59;3301:14:11;3347:34;;;;;3246:506;3346:108;;;;3246:506;3325:201;;;:::i;:::-;3536:16;;;3551:1;3536:16;:::i;:::-;;;:::i;:::-;3562:65;;3636:1;:::i;:::-;3647:99;;3246:506::o;3647:99::-;3681:21;3697:5;3681:21;;:::i;:::-;3721:14;;913:8745:59;;;;3721:14:11;;;3551:1;3721:14;;:::i;3562:65::-;3596:20;3551:1;3596:20;;:::i;:::-;3636:1;:::i;3346:108::-;3426:4;3387:45;3388:44;3418:13;3426:4;3418:13;:::i;:::-;3388:44;:::i;3387:45::-;:66;;3346:108;3387:66;3436:12;3325:201;3436:12;;;:::i;:::-;:17;;3452:1;3436:17;:::i;:::-;;913:8745:59;;;;3436:17:11;;3387:66;;3346:108;;3347:34;3365:12;;;;:::i;:::-;:16;;3380:1;3365:16;:::i;:::-;;3347:34;;913:8745:59;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;2566:964;3341:12;2566:964;3191:7;3494:28;2566:964;;;3210:34;2566:964;3003:60;3011:26;2945:10;2791:19;:12;;913:8745;;2791:12;913:8745;;;2791:19;2783:54;2813:1;2791:23;;;;;:::i;:::-;;2783:54;:::i;:::-;2848:58;2856:21;:14;913:8745;;;2856:21;:25;;;;:::i;:::-;;2848:58;:::i;:::-;2945:10;:::i;:::-;2917:75;2925:30;;;:::i;:::-;;;;:::i;:::-;;;2917:75;:::i;3011:26::-;;;;:::i;:::-;;;3003:60;:::i;:::-;3082:24;3099:7;3082:24;:::i;:::-;;;;:52;;;2566:964;3074:86;;;:::i;:::-;3191:7;:::i;:::-;3210:34;;:::i;:::-;;;:::i;3341:12::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;3494:28;;:::i;3082:52::-;3110:24;3074:86;3110:24;3127:7;3110:24;:::i;:::-;;;;3082:52;;;;2566:964;;;;;;;;:::i;4345:149:15:-;4460:27;4345:149;4460:18;:27;4345:149;4434:7;913:8745:59;;;4434:7:15;4460:18;:11;:18;:::i;:::-;:27;:::i;1324:62:6:-;1378:1;1324:62;;;:::i;:::-;1378:1;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;2335:198:6;2517:8;2335:198;2415:73;2423:22;2435:10;2443:1;2435:10;:::i;2423:22::-;;;;:::i;:::-;;;2415:73;:::i;2335:198::-;;;;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;10815:340:15;11116:32;;;;10815:340;10986:68;10994:21;10925:10;10933:1;10925:10;:::i;:::-;10908:68;10916:19;;;:::i;:::-;;;;:::i;:::-;;;10908:68;:::i;10994:21::-;;;;:::i;:::-;;;10986:68;:::i;:::-;11065:36;:18;:27;:18;;;:11;:18;:::i;:27::-;:36;:::i;:::-;11116:32;:::i;1478:151:9:-;1557:65;;:59;1595:20;;:::i;1557:59::-;:65;;:::i;1324:62:6:-;1378:1;1324:62;;;:::i;:::-;1378:1;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;8152:407;8245:78;8152:407;8253:43;;8274:22;;;:::i;8253:43::-;;8245:78;:::i;:::-;8334:71;8342:38;8361:19;;;:::i;8342:38::-;:15;:38;;8334:71;:::i;:::-;8416:55;8424:19;;;:::i;:::-;:23;;8446:1;8424:23;:::i;:::-;;8416:55;:::i;:::-;8482:23;;8446:1;8482:23;:::i;:::-;8516:35;8541:10;8446:1;8541:10;:::i;:::-;8516:35;;:::i;8152:407::-;;;;:::i;797:108:9:-;839:66;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;913:8745:59;;-1:-1:-1;;;839:66:9;;;;;;;;;;;913:8745:59;839:66:9;913:8745:59;;;839:66:9;-1:-1:-1;;;839:66:9;;;;913:8745:59;;9604:43;2841:944:9;;;3257:59;;:53;3295:14;;:::i;3257:53::-;:59;;:::i;:::-;3253:526;;;3351:17;;;;;:::i;3253:526::-;3404:61;:47;;;:::i;:61::-;:63;;;913:8745:59;;;;3404:63:9;-1:-1:-1;;;3404:63:9;;;;;;;;;;;-1:-1:-1;;3404:63:9;;;3253:526;-1:-1:-1;3400:302:9;;913:8745:59;;-1:-1:-1;;;3631:56:9;;839:66;3631:56;;;839:66;;;;;913:8745:59;839:66:9;913:8745:59;;;839:66:9;-1:-1:-1;;;839:66:9;;;;913:8745:59;;9604:43;3400:302:9;3509:82;3758:9;3525:20;3517:28;;3525:20;;:::i;3517:28::-;;3509:82;:::i;:::-;3758:9;:::i;3404:63::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;913:8745:59;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;;;;;;;;1620:130:6;1675:68;1683:7;;:::i;:::-;:23;;965:10:21;3940:16:59;:::i;1683:23:6:-;;1675:68;:::i;1718:66:13:-;;;:::i;:::-;1776:1;;:::i;913:8745:59:-;;;;;;;;;;2697:117:13;2755:15;2765:5;2755:15;;:::i;:::-;2785:22;;965:10:21;2794:12:13;886:96:21;2697:117:13;;;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;2031:106:13;2092:38;2100:9;2101:8;;:::i;2100:9::-;2092:38;:::i;1815:37:14:-;1851:1;;;:::i;:::-;;;;:::o;:::-;913:8745:59;;-1:-1:-1;;;1851:1:14;;;;;;;;;;;913:8745:59;1851:1:14;913:8745:59;;;1851:1:14;913:8745:59;;9604:43;2601:287:14;2863:18;2733:7;;;:::i;:::-;2725:63;2744:8;;:::i;:::-;2733:19;;;;2725:63;:::i;:::-;2863:18;;:::i;1768:41::-;1808:1;;;:::i;2894:209::-;3074:22;3084:12;;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;;;9604:43;8878:535:15;9310:37;;;;8972:10;8980:1;8972:10;:::i;:::-;8953:65;8961:21;;;:::i;:::-;;;;:::i;:::-;;;8953:65;:::i;:::-;9089:22;;;;;;:::i;:::-;;;:::i;:::-;9257:28;:18;;:9;:18;:::i;:::-;:28;;;;;:::i;:::-;;;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;913:8745;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;9733:659:15;10289:37;;;;9827:10;9835:1;9827:10;:::i;:::-;9816:21;9808:67;9816:21;;;:::i;:::-;;;;:::i;:::-;;;9808:67;:::i;:::-;10104:44;10125:23;9971:18;;;;:9;:18;:::i;:::-;9999:71;10007:24;;;;9999:71;:::i;10125:23::-;10104:18;;9971:9;10104:18;:::i;:44::-;10241:22;;;;;;:::i;2687:187:6:-;2827:40;;2779:6;;;:::i;:::-;2795:17;;;;:::i;2827:40::-;;;:::i;:::-;;;;913:8745:59;;;;2827:40:6;;;;913:8745:59;1468:72:13;;;:::i;:::-;1532:1;2509:14;2519:4;2509:14;;:::i;:::-;2538:20;;965:10:21;2545:12:13;886:96:21;2450:115:13;;;:::i;1423:320:20:-;1713:19;:23;;1735:1;1713:23;:::i;:::-;;1423:320;:::o;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;5328:125:11;;5445:1;5328:125;5366:69;5374:13;;;:::i;:::-;5366:69;:::i;:::-;2139:147:15;2271:7;2139:147;2271:7;:::i;2139:147::-;;;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;5366:69::-;5445:1;1024:95:6;;:::i;:::-;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;2290:67:12:-;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;5366:69::-;5445:1;1084:97:13;;:::i;:::-;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;5366:69::-;5445:1;1889:111:14;;:::i;:::-;;;:::i;2393:276:9:-;;2512:17;;;:::i;:::-;913:8745:59;;2544:15:9;;2558:1;2544:15;:::i;:::-;;:28;;;;;2393:276;2540:123;;;2393:276;;:::o;2540:123::-;2588:64;;;:::i;:::-;;2393:276::o;2544:28::-;;;;;;913:8745:59;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;1720:281:9;1909:85;1720:281;1793:106;1801:48;;;:::i;:::-;1793:106;:::i;:::-;1909:65;:59;1947:20;;:::i;1909:59::-;:65;:85;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;-1:-1:-1;;;913:8745:59;;;;;;9604:43;2209:106:13;2267:41;2275:8;;:::i;:::-;2267:41;:::i;5328:125:11:-;;5445:1;5328:125;5366:69;5374:13;;;:::i;5366:69::-;5445:1;:::i;913:8745:59:-;;-1:-1:-1;;913:8745:59;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;913:8745:59;;;;;;-1:-1:-1;;913:8745:59;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;913:8745:59;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;913:8745:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2292:159:15:-;;2404:13;2427:17;2292:159;2404:13;;:::i;:::-;2427:17;;:::i;2292:159::-;;;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;5366:69::-;5445:1;;965:10:21;2168::6;:::i;1125:111::-;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;5366:69::-;5445:1;1260:15:13;1270:5;1260:15;;:::i;1187:95::-;;;:::i;5328:125:11:-;5366:69;5374:13;;;:::i;2006:109:14:-;;;:::i;2107:152:9:-;2225:27;2107:152;2192:17;;;:::i;2225:27::-;;;913:8745:59;;;;2225:27:9;;;;913:8745:59;;;;;:::i;:::-;;;;;;-1:-1:-1;;;913:8745:59;;;;;:::o;:::-;;;:::i;6685:198:20:-;6799:77;;;;:::i;:::-;;;:::i;913:8745:59:-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;7069:325:20:-;7276:25;7069:325;7318:69;7069:325;;7210:12;913:8745:59;;;7210:12:20;7276:25;;;;;;;;;;;:::i;:::-;7318:69;;:::i;913:8745:59:-;;;;:::o;:::-;;;-1:-1:-1;;;913:8745:59;;;;;;;;;;;;;;;;;;;9604:43;7682:628:20;;;;7886:418;;;-1:-1:-1;913:8745:59;;7917:22:20;;7938:1;7917:22;:::i;:::-;;7913:286;;8212:17;;:::o;7913:286::-;8132:18;8124:60;8132:18;;:::i;:::-;8124:60;:::i;7886:418::-;8280:12;8832:540;8991:17;;913:8745:59;;;8991:17:20;:21;;9011:1;8991:21;:::i;:::-;;8987:379;;;9163:142;;;;;;;8987:379;9335:20;;;913:8745:59;;;;9335:20:20;-1:-1:-1;;;9335:20:20;;9604:43:59;;;9335:20:20;;;;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\n\r\n/**\r\n * @title DebtToken\r\n * @dev Upgradeable ERC20 token representing user debt in a lending protocol\r\n * @notice Tracks debt for a specific asset, minted when borrowing and burned upon repayment.\r\n *         Only the owner (LendingPool) can mint/burn tokens. Supports pausing, upgrades with a timelock,\r\n *         and reentrancy protection for future-proofing.\r\n */\r\ncontract DebtToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable, ReentrancyGuardUpgradeable {\r\n    /// @notice Address of the underlying asset (e.g., USDC) associated with this debt token\r\n    address public underlyingAsset;\r\n\r\n    /// @notice Delay for contract upgrades (in seconds)\r\n    uint256 public upgradeDelay;\r\n    /// @notice Timestamp when the proposed upgrade can be executed\r\n    uint256 public upgradeProposalTime;\r\n    /// @notice Proposed new implementation address for the upgrade\r\n    address public proposedImplementation;\r\n\r\n    /// @notice Emitted when debt tokens are minted\r\n    event DebtMinted(address indexed user, address indexed underlyingAsset, uint256 amount);\r\n    /// @notice Emitted when debt tokens are burned\r\n    event DebtRepaid(address indexed user, address indexed underlyingAsset, uint256 amount);\r\n    /// @notice Emitted when an upgrade is proposed\r\n    event UpgradeProposed(address indexed newImplementation, uint256 proposalTime);\r\n    /// @notice Emitted when debt tokens are minted in batch\r\n    event BatchDebtMinted(address[] recipients, uint256[] amounts);\r\n    /// @notice Emitted when debt tokens are burned in batch\r\n    event BatchDebtRepaid(address[] accounts, uint256[] amounts);\r\n\r\n    /**\r\n     * @dev Constructor is replaced by initializer for upgradeable contracts\r\n     * @param name_ Token name (e.g., \"Debt USDC\")\r\n     * @param symbol_ Token symbol (e.g., \"dUSDC\")\r\n     * @param _underlyingAsset Address of the underlying asset (e.g., USDC)\r\n     * @param _upgradeDelay Delay for upgrades in seconds (min 1 hour, max 30 days)\r\n     */\r\n    function initialize(\r\n        string memory name_,\r\n        string memory symbol_,\r\n        address _underlyingAsset,\r\n        address initialOwner,\r\n        uint256 _upgradeDelay\r\n    ) public initializer {\r\n        require(bytes(name_).length > 0, \"Invalid token name\");\r\n        require(bytes(symbol_).length > 0, \"Invalid token symbol\");\r\n        require(_underlyingAsset != address(0), \"Invalid underlying asset address\");\r\n        require(initialOwner != address(0), \"Invalid owner address\");\r\n        require(_upgradeDelay >= 1 hours && _upgradeDelay <= 30 days, \"Invalid upgrade delay\");\r\n        __ERC20_init(name_, symbol_);\r\n        underlyingAsset = _underlyingAsset;\r\n        __Ownable_init(); // FIXED: Removed initialOwner parameter\r\n        transferOwnership(initialOwner); // FIXED: Set owner explicitly\r\n        __UUPSUpgradeable_init();\r\n        __Pausable_init();\r\n        __ReentrancyGuard_init();\r\n        upgradeDelay = _upgradeDelay;\r\n    }\r\n\r\n    /**\r\n     * @notice Mints debt tokens to a user, representing new debt\r\n     * @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\r\n     * @param to Address receiving the debt tokens\r\n     * @param amount Amount of debt tokens to mint, in wei\r\n     */\r\n    function mint(address to, uint256 amount) external onlyOwner whenNotPaused nonReentrant {\r\n        require(to != address(0), \"Invalid address\");\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n        _mint(to, amount);\r\n        emit DebtMinted(to, underlyingAsset, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Burns debt tokens from a user, representing debt repayment\r\n     * @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\r\n     * @param from Address from which to burn debt tokens\r\n     * @param amount Amount of debt tokens to burn, in wei\r\n     */\r\n    function burn(address from, uint256 amount) external onlyOwner whenNotPaused nonReentrant {\r\n        require(from != address(0), \"Invalid address\");\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n        _burn(from, amount);\r\n        emit DebtRepaid(from, underlyingAsset, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Mints debt tokens to multiple users in a single transaction\r\n     * @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\r\n     * @param recipients Array of addresses receiving the debt tokens\r\n     * @param amounts Array of amounts to mint for each recipient\r\n     */\r\n    function batchMint(address[] calldata recipients, uint256[] calldata amounts) external onlyOwner whenNotPaused nonReentrant {\r\n        require(recipients.length == amounts.length, \"Arrays length mismatch\");\r\n        require(recipients.length > 0, \"Empty arrays\");\r\n        require(recipients.length <= 100, \"Batch size too large\");\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            require(recipients[i] != address(0), \"Invalid address\");\r\n            require(amounts[i] > 0, \"Amount must be greater than zero\");\r\n            _mint(recipients[i], amounts[i]);\r\n        }\r\n        emit BatchDebtMinted(recipients, amounts);\r\n    }\r\n\r\n    /**\r\n     * @notice Burns debt tokens from multiple users in a single transaction\r\n     * @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\r\n     * @param accounts Array of addresses from which to burn debt tokens\r\n     * @param amounts Array of amounts to burn for each account\r\n     */\r\n    function batchBurn(address[] calldata accounts, uint256[] calldata amounts) external onlyOwner whenNotPaused nonReentrant {\r\n        require(accounts.length == amounts.length, \"Arrays length mismatch\");\r\n        require(accounts.length > 0, \"Empty arrays\");\r\n        require(accounts.length <= 100, \"Batch size too large\");\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            require(accounts[i] != address(0), \"Invalid address\");\r\n            require(amounts[i] > 0, \"Amount must be greater than zero\");\r\n            _burn(accounts[i], amounts[i]);\r\n        }\r\n        emit BatchDebtRepaid(accounts, amounts);\r\n    }\r\n\r\n    /**\r\n     * @notice Pauses minting and burning operations\r\n     * @dev Only callable by the owner\r\n     */\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n        emit Paused(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice Unpauses minting and burning operations\r\n     * @dev Only callable by the owner\r\n     */\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n        emit Unpaused(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice Proposes a new implementation for the contract upgrade\r\n     * @dev Only callable by the owner. The upgrade can only be executed after the timelock period (upgradeDelay) has passed.\r\n     * @param newImplementation Address of the new contract implementation\r\n     */\r\n    function proposeUpgrade(address newImplementation) external onlyOwner {\r\n        require(newImplementation != address(0), \"Invalid implementation address\");\r\n        upgradeProposalTime = block.timestamp + upgradeDelay;\r\n        proposedImplementation = newImplementation;\r\n        emit UpgradeProposed(newImplementation, upgradeProposalTime);\r\n    }\r\n\r\n    /**\r\n     * @dev Authorizes the upgrade to the proposed implementation after the timelock period\r\n     * @param newImplementation Address of the new contract implementation\r\n     * @notice Only callable by the owner. The newImplementation must match the proposedImplementation, and the timelock must have elapsed.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {\r\n        require(newImplementation == proposedImplementation, \"Invalid implementation\");\r\n        require(block.timestamp >= upgradeProposalTime, \"Timelock not elapsed\");\r\n        require(upgradeProposalTime > 0, \"No upgrade proposed\");\r\n        upgradeProposalTime = 0;\r\n        proposedImplementation = address(0);\r\n    }\r\n\r\n    /**\r\n     * @notice Returns the proposed implementation address\r\n     * @return Address of the proposed implementation\r\n     */\r\n    function getProposedImplementation() external view returns (address) {\r\n        return proposedImplementation;\r\n    }\r\n\r\n    /**\r\n     * @notice Returns the timestamp when the proposed upgrade can be executed\r\n     * @return Timestamp of the proposed upgrade\r\n     */\r\n    function getUpgradeProposalTime() external view returns (uint256) {\r\n        return upgradeProposalTime;\r\n    }\r\n\r\n    /**\r\n     * @notice Disables token transfers\r\n     * @dev Debt tokens are non-transferable to ensure protocol integrity\r\n     */\r\n    function transfer(address, uint256) public virtual override returns (bool) {\r\n        revert(\"DebtToken: Transfers are disabled\");\r\n    }\r\n\r\n    /**\r\n     * @notice Disables token transfers\r\n     * @dev Debt tokens are non-transferable to ensure protocol integrity\r\n     */\r\n    function transferFrom(address, address, uint256) public virtual override returns (bool) {\r\n        revert(\"DebtToken: Transfers are disabled\");\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\DR. EMMA\\my-project\\lumora\\contracts\\DebtToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/DebtToken.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "ContextUpgradeable": [
        3178
      ],
      "DebtToken": [
        18027
      ],
      "ERC1967UpgradeUpgradeable": [
        1140
      ],
      "ERC20Upgradeable": [
        2282
      ],
      "IBeaconUpgradeable": [
        1150
      ],
      "IERC1822ProxiableUpgradeable": [
        815
      ],
      "IERC1967Upgradeable": [
        805
      ],
      "IERC20MetadataUpgradeable": [
        2385
      ],
      "IERC20Upgradeable": [
        2360
      ],
      "Initializable": [
        1319
      ],
      "OwnableUpgradeable": [
        784
      ],
      "PausableUpgradeable": [
        1584
      ],
      "ReentrancyGuardUpgradeable": [
        1669
      ],
      "StorageSlotUpgradeable": [
        3288
      ],
      "UUPSUpgradeable": [
        1456
      ]
    },
    "id": 18028,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17427,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:59"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 17428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18028,
        "sourceUnit": 2283,
        "src": "61:78:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 17429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18028,
        "sourceUnit": 785,
        "src": "141:75:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 17430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18028,
        "sourceUnit": 1320,
        "src": "218:75:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "id": 17431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18028,
        "sourceUnit": 1457,
        "src": "295:77:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 17432,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18028,
        "sourceUnit": 1585,
        "src": "374:78:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "id": 17433,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18028,
        "sourceUnit": 1670,
        "src": "454:85:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17435,
              "name": "Initializable",
              "nameLocations": [
                "935:13:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1319,
              "src": "935:13:59"
            },
            "id": 17436,
            "nodeType": "InheritanceSpecifier",
            "src": "935:13:59"
          },
          {
            "baseName": {
              "id": 17437,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "950:16:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2282,
              "src": "950:16:59"
            },
            "id": 17438,
            "nodeType": "InheritanceSpecifier",
            "src": "950:16:59"
          },
          {
            "baseName": {
              "id": 17439,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "968:18:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 784,
              "src": "968:18:59"
            },
            "id": 17440,
            "nodeType": "InheritanceSpecifier",
            "src": "968:18:59"
          },
          {
            "baseName": {
              "id": 17441,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "988:15:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1456,
              "src": "988:15:59"
            },
            "id": 17442,
            "nodeType": "InheritanceSpecifier",
            "src": "988:15:59"
          },
          {
            "baseName": {
              "id": 17443,
              "name": "PausableUpgradeable",
              "nameLocations": [
                "1005:19:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1584,
              "src": "1005:19:59"
            },
            "id": 17444,
            "nodeType": "InheritanceSpecifier",
            "src": "1005:19:59"
          },
          {
            "baseName": {
              "id": 17445,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1026:26:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1669,
              "src": "1026:26:59"
            },
            "id": 17446,
            "nodeType": "InheritanceSpecifier",
            "src": "1026:26:59"
          }
        ],
        "canonicalName": "DebtToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 17434,
          "nodeType": "StructuredDocumentation",
          "src": "543:368:59",
          "text": " @title DebtToken\n @dev Upgradeable ERC20 token representing user debt in a lending protocol\n @notice Tracks debt for a specific asset, minted when borrowing and burned upon repayment.\n         Only the owner (LendingPool) can mint/burn tokens. Supports pausing, upgrades with a timelock,\n         and reentrancy protection for future-proofing."
        },
        "fullyImplemented": true,
        "id": 18027,
        "linearizedBaseContracts": [
          18027,
          1669,
          1584,
          1456,
          1140,
          805,
          815,
          784,
          2282,
          2385,
          2360,
          3178,
          1319
        ],
        "name": "DebtToken",
        "nameLocation": "922:9:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 17447,
              "nodeType": "StructuredDocumentation",
              "src": "1060:88:59",
              "text": "@notice Address of the underlying asset (e.g., USDC) associated with this debt token"
            },
            "functionSelector": "7158da7c",
            "id": 17449,
            "mutability": "mutable",
            "name": "underlyingAsset",
            "nameLocation": "1169:15:59",
            "nodeType": "VariableDeclaration",
            "scope": 18027,
            "src": "1154:30:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17448,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1154:7:59",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 17450,
              "nodeType": "StructuredDocumentation",
              "src": "1193:52:59",
              "text": "@notice Delay for contract upgrades (in seconds)"
            },
            "functionSelector": "7e48d4ea",
            "id": 17452,
            "mutability": "mutable",
            "name": "upgradeDelay",
            "nameLocation": "1266:12:59",
            "nodeType": "VariableDeclaration",
            "scope": 18027,
            "src": "1251:27:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17451,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1251:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 17453,
              "nodeType": "StructuredDocumentation",
              "src": "1285:63:59",
              "text": "@notice Timestamp when the proposed upgrade can be executed"
            },
            "functionSelector": "651eebfe",
            "id": 17455,
            "mutability": "mutable",
            "name": "upgradeProposalTime",
            "nameLocation": "1369:19:59",
            "nodeType": "VariableDeclaration",
            "scope": 18027,
            "src": "1354:34:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17454,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1354:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 17456,
              "nodeType": "StructuredDocumentation",
              "src": "1395:63:59",
              "text": "@notice Proposed new implementation address for the upgrade"
            },
            "functionSelector": "bb057c5e",
            "id": 17458,
            "mutability": "mutable",
            "name": "proposedImplementation",
            "nameLocation": "1479:22:59",
            "nodeType": "VariableDeclaration",
            "scope": 18027,
            "src": "1464:37:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17457,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1464:7:59",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17459,
              "nodeType": "StructuredDocumentation",
              "src": "1510:47:59",
              "text": "@notice Emitted when debt tokens are minted"
            },
            "eventSelector": "582189f7394b93e93476738fd1de7cf483e1f99dfb27e00a7c345a393eefe18c",
            "id": 17467,
            "name": "DebtMinted",
            "nameLocation": "1569:10:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17461,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1596:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17467,
                  "src": "1580:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17463,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlyingAsset",
                  "nameLocation": "1618:15:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17467,
                  "src": "1602:31:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17465,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1643:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17467,
                  "src": "1635:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1579:71:59"
            },
            "src": "1563:88:59"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17468,
              "nodeType": "StructuredDocumentation",
              "src": "1657:47:59",
              "text": "@notice Emitted when debt tokens are burned"
            },
            "eventSelector": "eef1a28252f7c3266ccea3202ee9693f0834485bc3551310a406e04829c7e2cf",
            "id": 17476,
            "name": "DebtRepaid",
            "nameLocation": "1716:10:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17470,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1743:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17476,
                  "src": "1727:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17472,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlyingAsset",
                  "nameLocation": "1765:15:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17476,
                  "src": "1749:31:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1790:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17476,
                  "src": "1782:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1726:71:59"
            },
            "src": "1710:88:59"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17477,
              "nodeType": "StructuredDocumentation",
              "src": "1804:47:59",
              "text": "@notice Emitted when an upgrade is proposed"
            },
            "eventSelector": "ea80d7bcdb5b960a75976c0e94d2d4b2077378cfea983c73b49501b8613da224",
            "id": 17483,
            "name": "UpgradeProposed",
            "nameLocation": "1863:15:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17479,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1895:17:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17483,
                  "src": "1879:33:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17481,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalTime",
                  "nameLocation": "1922:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17483,
                  "src": "1914:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1878:57:59"
            },
            "src": "1857:79:59"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17484,
              "nodeType": "StructuredDocumentation",
              "src": "1942:56:59",
              "text": "@notice Emitted when debt tokens are minted in batch"
            },
            "eventSelector": "b2d52f51d17f6a36667bdd9225bf0f8b6a5e043af71d7ab20c3bb5047089eacf",
            "id": 17492,
            "name": "BatchDebtMinted",
            "nameLocation": "2010:15:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "2036:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17492,
                  "src": "2026:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17485,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2026:7:59",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17486,
                    "nodeType": "ArrayTypeName",
                    "src": "2026:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17490,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "2058:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17492,
                  "src": "2048:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17488,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2048:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17489,
                    "nodeType": "ArrayTypeName",
                    "src": "2048:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:41:59"
            },
            "src": "2004:63:59"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17493,
              "nodeType": "StructuredDocumentation",
              "src": "2073:56:59",
              "text": "@notice Emitted when debt tokens are burned in batch"
            },
            "eventSelector": "95eb041e116443e44d5e5f89bba504bd288df2a00235f6996ba6d0cee74f14a1",
            "id": 17501,
            "name": "BatchDebtRepaid",
            "nameLocation": "2141:15:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2167:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17501,
                  "src": "2157:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17494,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2157:7:59",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17495,
                    "nodeType": "ArrayTypeName",
                    "src": "2157:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17499,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "2187:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17501,
                  "src": "2177:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17497,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2177:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17498,
                    "nodeType": "ArrayTypeName",
                    "src": "2177:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2156:39:59"
            },
            "src": "2135:61:59"
          },
          {
            "body": {
              "id": 17599,
              "nodeType": "Block",
              "src": "2772:758:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 17520,
                                "name": "name_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17504,
                                "src": "2797:5:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 17519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2791:5:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 17518,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2791:5:59",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 17521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2791:12:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 17522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2804:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2791:19:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2813:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2791:23:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e206e616d65",
                        "id": 17525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2816:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44afd3b3a4aaebee25925d43a9142b62b52a69b3dcb3651fe2017f2abac8f35a",
                          "typeString": "literal_string \"Invalid token name\""
                        },
                        "value": "Invalid token name"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44afd3b3a4aaebee25925d43a9142b62b52a69b3dcb3651fe2017f2abac8f35a",
                          "typeString": "literal_string \"Invalid token name\""
                        }
                      ],
                      "id": 17517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2783:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:54:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17527,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:54:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 17531,
                                "name": "symbol_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17506,
                                "src": "2862:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 17530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2856:5:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 17529,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2856:5:59",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 17532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2856:14:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 17533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2871:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2856:21:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2880:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2856:25:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2073796d626f6c",
                        "id": 17536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2883:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9d45e820a4dcad6de80f7b4702edf29da13087e7abc87319e049f3e7d95c715",
                          "typeString": "literal_string \"Invalid token symbol\""
                        },
                        "value": "Invalid token symbol"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9d45e820a4dcad6de80f7b4702edf29da13087e7abc87319e049f3e7d95c715",
                          "typeString": "literal_string \"Invalid token symbol\""
                        }
                      ],
                      "id": 17528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2848:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:58:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17538,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:58:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17540,
                          "name": "_underlyingAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17508,
                          "src": "2925:16:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2953:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2945:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2945:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2945:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2925:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420756e6465726c79696e672061737365742061646472657373",
                        "id": 17546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2957:34:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_117e145ffecef4143e942939f23eec0046d7f6ae9da73ffafc991bb58e095e43",
                          "typeString": "literal_string \"Invalid underlying asset address\""
                        },
                        "value": "Invalid underlying asset address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_117e145ffecef4143e942939f23eec0046d7f6ae9da73ffafc991bb58e095e43",
                          "typeString": "literal_string \"Invalid underlying asset address\""
                        }
                      ],
                      "id": 17539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2917:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:75:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17548,
                  "nodeType": "ExpressionStatement",
                  "src": "2917:75:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17550,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17510,
                          "src": "3011:12:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3035:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3027:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17551,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3027:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3027:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3011:26:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f776e65722061646472657373",
                        "id": 17556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3039:23:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
                          "typeString": "literal_string \"Invalid owner address\""
                        },
                        "value": "Invalid owner address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
                          "typeString": "literal_string \"Invalid owner address\""
                        }
                      ],
                      "id": 17549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3003:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3003:60:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17558,
                  "nodeType": "ExpressionStatement",
                  "src": "3003:60:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 17566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 17562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 17560,
                            "name": "_upgradeDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17512,
                            "src": "3082:13:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 17561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3099:7:59",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3600_by_1",
                              "typeString": "int_const 3600"
                            },
                            "value": "1"
                          },
                          "src": "3082:24:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 17565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 17563,
                            "name": "_upgradeDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17512,
                            "src": "3110:13:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 17564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3127:7:59",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "3110:24:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3082:52:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420757067726164652064656c6179",
                        "id": 17567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:23:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78a22152be41b234c9d383e931c4610e1eba22efc36697c5aeffa687c8aaa253",
                          "typeString": "literal_string \"Invalid upgrade delay\""
                        },
                        "value": "Invalid upgrade delay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78a22152be41b234c9d383e931c4610e1eba22efc36697c5aeffa687c8aaa253",
                          "typeString": "literal_string \"Invalid upgrade delay\""
                        }
                      ],
                      "id": 17559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3074:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3074:86:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17569,
                  "nodeType": "ExpressionStatement",
                  "src": "3074:86:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17571,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17504,
                        "src": "3184:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 17572,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17506,
                        "src": "3191:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 17570,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "3171:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 17573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3171:28:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17574,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:28:59"
                },
                {
                  "expression": {
                    "id": 17577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17575,
                      "name": "underlyingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17449,
                      "src": "3210:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17576,
                      "name": "_underlyingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17508,
                      "src": "3228:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3210:34:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17578,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:34:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17579,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "3255:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:16:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17581,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:16:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17583,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17510,
                        "src": "3341:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17582,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "3323:17:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3323:31:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17585,
                  "nodeType": "ExpressionStatement",
                  "src": "3323:31:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17586,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "3396:22:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:24:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17588,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:24:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17589,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "3431:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3431:17:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17591,
                  "nodeType": "ExpressionStatement",
                  "src": "3431:17:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17592,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1608,
                      "src": "3459:22:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3459:24:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17594,
                  "nodeType": "ExpressionStatement",
                  "src": "3459:24:59"
                },
                {
                  "expression": {
                    "id": 17597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17595,
                      "name": "upgradeDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17452,
                      "src": "3494:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17596,
                      "name": "_upgradeDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17512,
                      "src": "3509:13:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3494:28:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17598,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:28:59"
                }
              ]
            },
            "documentation": {
              "id": 17502,
              "nodeType": "StructuredDocumentation",
              "src": "2204:356:59",
              "text": " @dev Constructor is replaced by initializer for upgradeable contracts\n @param name_ Token name (e.g., \"Debt USDC\")\n @param symbol_ Token symbol (e.g., \"dUSDC\")\n @param _underlyingAsset Address of the underlying asset (e.g., USDC)\n @param _upgradeDelay Delay for upgrades in seconds (min 1 hour, max 30 days)"
            },
            "functionSelector": "c9aba0aa",
            "id": 17600,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17514,
                  "name": "initializer",
                  "nameLocations": [
                    "2760:11:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1221,
                  "src": "2760:11:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "2760:11:59"
              }
            ],
            "name": "initialize",
            "nameLocation": "2575:10:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17504,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2610:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17600,
                  "src": "2596:19:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17503,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17506,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2640:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17600,
                  "src": "2626:21:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17508,
                  "mutability": "mutable",
                  "name": "_underlyingAsset",
                  "nameLocation": "2666:16:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17600,
                  "src": "2658:24:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17510,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2701:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17600,
                  "src": "2693:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17512,
                  "mutability": "mutable",
                  "name": "_upgradeDelay",
                  "nameLocation": "2732:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17600,
                  "src": "2724:21:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:167:59"
            },
            "returnParameters": {
              "id": 17516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2772:0:59"
            },
            "scope": 18027,
            "src": "2566:964:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17642,
              "nodeType": "Block",
              "src": "3921:212:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17615,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17603,
                          "src": "3940:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3954:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3946:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17616,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3946:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3946:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3940:16:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 17621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3958:17:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 17614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3932:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3932:44:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17623,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:44:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17625,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17605,
                          "src": "3995:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4004:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3995:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                        "id": 17628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4007:34:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                          "typeString": "literal_string \"Amount must be greater than zero\""
                        },
                        "value": "Amount must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                          "typeString": "literal_string \"Amount must be greater than zero\""
                        }
                      ],
                      "id": 17624,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3987:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3987:55:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17630,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:55:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17632,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17603,
                        "src": "4059:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17633,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17605,
                        "src": "4063:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17631,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2094,
                      "src": "4053:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4053:17:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17635,
                  "nodeType": "ExpressionStatement",
                  "src": "4053:17:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17637,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17603,
                        "src": "4097:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17638,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17449,
                        "src": "4101:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17639,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17605,
                        "src": "4118:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17636,
                      "name": "DebtMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17467,
                      "src": "4086:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4086:39:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17641,
                  "nodeType": "EmitStatement",
                  "src": "4081:44:59"
                }
              ]
            },
            "documentation": {
              "id": 17601,
              "nodeType": "StructuredDocumentation",
              "src": "3538:289:59",
              "text": " @notice Mints debt tokens to a user, representing new debt\n @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\n @param to Address receiving the debt tokens\n @param amount Amount of debt tokens to mint, in wei"
            },
            "functionSelector": "40c10f19",
            "id": 17643,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17608,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17607,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3884:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "3884:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "3884:9:59"
              },
              {
                "id": 17610,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17609,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3894:13:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1506,
                  "src": "3894:13:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "3894:13:59"
              },
              {
                "id": 17612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17611,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3908:12:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1629,
                  "src": "3908:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "3908:12:59"
              }
            ],
            "name": "mint",
            "nameLocation": "3842:4:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17603,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3855:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17643,
                  "src": "3847:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3847:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17605,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3867:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17643,
                  "src": "3859:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3846:28:59"
            },
            "returnParameters": {
              "id": 17613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3921:0:59"
            },
            "scope": 18027,
            "src": "3833:300:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17685,
              "nodeType": "Block",
              "src": "4541:218:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17658,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17646,
                          "src": "4560:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4576:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4568:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17659,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4568:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4568:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4560:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 17664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4580:17:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 17657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4552:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4552:46:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17666,
                  "nodeType": "ExpressionStatement",
                  "src": "4552:46:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17668,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17648,
                          "src": "4617:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4626:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4617:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                        "id": 17671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4629:34:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                          "typeString": "literal_string \"Amount must be greater than zero\""
                        },
                        "value": "Amount must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                          "typeString": "literal_string \"Amount must be greater than zero\""
                        }
                      ],
                      "id": 17667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4609:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4609:55:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17673,
                  "nodeType": "ExpressionStatement",
                  "src": "4609:55:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17675,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17646,
                        "src": "4681:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17648,
                        "src": "4687:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17674,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2166,
                      "src": "4675:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4675:19:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17678,
                  "nodeType": "ExpressionStatement",
                  "src": "4675:19:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17680,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17646,
                        "src": "4721:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17681,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17449,
                        "src": "4727:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17682,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17648,
                        "src": "4744:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17679,
                      "name": "DebtRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17476,
                      "src": "4710:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:41:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17684,
                  "nodeType": "EmitStatement",
                  "src": "4705:46:59"
                }
              ]
            },
            "documentation": {
              "id": 17644,
              "nodeType": "StructuredDocumentation",
              "src": "4141:304:59",
              "text": " @notice Burns debt tokens from a user, representing debt repayment\n @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\n @param from Address from which to burn debt tokens\n @param amount Amount of debt tokens to burn, in wei"
            },
            "functionSelector": "9dc29fac",
            "id": 17686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17650,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4504:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "4504:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "4504:9:59"
              },
              {
                "id": 17653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17652,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "4514:13:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1506,
                  "src": "4514:13:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "4514:13:59"
              },
              {
                "id": 17655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17654,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4528:12:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1629,
                  "src": "4528:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "4528:12:59"
              }
            ],
            "name": "burn",
            "nameLocation": "4460:4:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17646,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4473:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17686,
                  "src": "4465:12:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17648,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4487:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17686,
                  "src": "4479:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4464:30:59"
            },
            "returnParameters": {
              "id": 17656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4541:0:59"
            },
            "scope": 18027,
            "src": "4451:308:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17775,
              "nodeType": "Block",
              "src": "5221:527:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17703,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17690,
                            "src": "5240:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 17704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5251:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5240:17:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 17705,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17693,
                            "src": "5261:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 17706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5269:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5261:14:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5240:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417272617973206c656e677468206d69736d61746368",
                        "id": 17708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5277:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                          "typeString": "literal_string \"Arrays length mismatch\""
                        },
                        "value": "Arrays length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                          "typeString": "literal_string \"Arrays length mismatch\""
                        }
                      ],
                      "id": 17702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5232:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5232:70:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17710,
                  "nodeType": "ExpressionStatement",
                  "src": "5232:70:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17712,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17690,
                            "src": "5321:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 17713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5332:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5321:17:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5341:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5321:21:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d70747920617272617973",
                        "id": 17716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5344:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_920fc87d8e9a45232b5e4c2c36e3c0fff5f09b5434a80d6ec35d7f09f9d69c29",
                          "typeString": "literal_string \"Empty arrays\""
                        },
                        "value": "Empty arrays"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_920fc87d8e9a45232b5e4c2c36e3c0fff5f09b5434a80d6ec35d7f09f9d69c29",
                          "typeString": "literal_string \"Empty arrays\""
                        }
                      ],
                      "id": 17711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5313:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5313:46:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17718,
                  "nodeType": "ExpressionStatement",
                  "src": "5313:46:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17720,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17690,
                            "src": "5378:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 17721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5389:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5378:17:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 17722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5399:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5378:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42617463682073697a6520746f6f206c61726765",
                        "id": 17724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5404:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
                          "typeString": "literal_string \"Batch size too large\""
                        },
                        "value": "Batch size too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
                          "typeString": "literal_string \"Batch size too large\""
                        }
                      ],
                      "id": 17719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5370:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5370:57:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17726,
                  "nodeType": "ExpressionStatement",
                  "src": "5370:57:59"
                },
                {
                  "body": {
                    "id": 17768,
                    "nodeType": "Block",
                    "src": "5486:203:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 17746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 17739,
                                  "name": "recipients",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17690,
                                  "src": "5509:10:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 17741,
                                "indexExpression": {
                                  "id": 17740,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17728,
                                  "src": "5520:1:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5509:13:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 17744,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5534:1:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 17743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5526:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 17742,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5526:7:59",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 17745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5526:10:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5509:27:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 17747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5538:17:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 17738,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5501:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 17748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5501:55:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17749,
                        "nodeType": "ExpressionStatement",
                        "src": "5501:55:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 17755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 17751,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17693,
                                  "src": "5579:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 17753,
                                "indexExpression": {
                                  "id": 17752,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17728,
                                  "src": "5587:1:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5579:10:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 17754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5592:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5579:14:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 17756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5595:34:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 17750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5571:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 17757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5571:59:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17758,
                        "nodeType": "ExpressionStatement",
                        "src": "5571:59:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 17760,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17690,
                                "src": "5651:10:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 17762,
                              "indexExpression": {
                                "id": 17761,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17728,
                                "src": "5662:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5651:13:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 17763,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17693,
                                "src": "5666:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 17765,
                              "indexExpression": {
                                "id": 17764,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17728,
                                "src": "5674:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5666:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 17759,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "5645:5:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 17766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5645:32:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17767,
                        "nodeType": "ExpressionStatement",
                        "src": "5645:32:59"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17731,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17728,
                      "src": "5458:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 17732,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17690,
                        "src": "5462:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 17733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5473:6:59",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5462:17:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5458:21:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17769,
                  "initializationExpression": {
                    "assignments": [
                      17728
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 17728,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5451:1:59",
                        "nodeType": "VariableDeclaration",
                        "scope": 17769,
                        "src": "5443:9:59",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17727,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5443:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 17730,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 17729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5455:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5443:13:59"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 17736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5481:3:59",
                      "subExpression": {
                        "id": 17735,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17728,
                        "src": "5481:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17737,
                    "nodeType": "ExpressionStatement",
                    "src": "5481:3:59"
                  },
                  "nodeType": "ForStatement",
                  "src": "5438:251:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17771,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17690,
                        "src": "5720:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 17772,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17693,
                        "src": "5732:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 17770,
                      "name": "BatchDebtMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17492,
                      "src": "5704:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 17773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5704:36:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17774,
                  "nodeType": "EmitStatement",
                  "src": "5699:41:59"
                }
              ]
            },
            "documentation": {
              "id": 17687,
              "nodeType": "StructuredDocumentation",
              "src": "4767:324:59",
              "text": " @notice Mints debt tokens to multiple users in a single transaction\n @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\n @param recipients Array of addresses receiving the debt tokens\n @param amounts Array of amounts to mint for each recipient"
            },
            "functionSelector": "68573107",
            "id": 17776,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17695,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5184:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "5184:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "5184:9:59"
              },
              {
                "id": 17698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17697,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5194:13:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1506,
                  "src": "5194:13:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "5194:13:59"
              },
              {
                "id": 17700,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17699,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5208:12:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1629,
                  "src": "5208:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "5208:12:59"
              }
            ],
            "name": "batchMint",
            "nameLocation": "5106:9:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17690,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "5135:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17776,
                  "src": "5116:29:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17688,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5116:7:59",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17689,
                    "nodeType": "ArrayTypeName",
                    "src": "5116:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17693,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "5166:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17776,
                  "src": "5147:26:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17691,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5147:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17692,
                    "nodeType": "ArrayTypeName",
                    "src": "5147:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:59:59"
            },
            "returnParameters": {
              "id": 17701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5221:0:59"
            },
            "scope": 18027,
            "src": "5097:651:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17865,
              "nodeType": "Block",
              "src": "6211:513:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17793,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17780,
                            "src": "6230:8:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 17794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6239:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6230:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 17795,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17783,
                            "src": "6249:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 17796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6257:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6249:14:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6230:33:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417272617973206c656e677468206d69736d61746368",
                        "id": 17798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6265:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                          "typeString": "literal_string \"Arrays length mismatch\""
                        },
                        "value": "Arrays length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                          "typeString": "literal_string \"Arrays length mismatch\""
                        }
                      ],
                      "id": 17792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6222:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6222:68:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17800,
                  "nodeType": "ExpressionStatement",
                  "src": "6222:68:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17802,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17780,
                            "src": "6309:8:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 17803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6318:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6309:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6327:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6309:19:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d70747920617272617973",
                        "id": 17806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6330:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_920fc87d8e9a45232b5e4c2c36e3c0fff5f09b5434a80d6ec35d7f09f9d69c29",
                          "typeString": "literal_string \"Empty arrays\""
                        },
                        "value": "Empty arrays"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_920fc87d8e9a45232b5e4c2c36e3c0fff5f09b5434a80d6ec35d7f09f9d69c29",
                          "typeString": "literal_string \"Empty arrays\""
                        }
                      ],
                      "id": 17801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6301:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6301:44:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17808,
                  "nodeType": "ExpressionStatement",
                  "src": "6301:44:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17810,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17780,
                            "src": "6364:8:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 17811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6373:6:59",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6364:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 17812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6383:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "6364:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42617463682073697a6520746f6f206c61726765",
                        "id": 17814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6388:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
                          "typeString": "literal_string \"Batch size too large\""
                        },
                        "value": "Batch size too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
                          "typeString": "literal_string \"Batch size too large\""
                        }
                      ],
                      "id": 17809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6356:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6356:55:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17816,
                  "nodeType": "ExpressionStatement",
                  "src": "6356:55:59"
                },
                {
                  "body": {
                    "id": 17858,
                    "nodeType": "Block",
                    "src": "6468:199:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 17836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 17829,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17780,
                                  "src": "6491:8:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 17831,
                                "indexExpression": {
                                  "id": 17830,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17818,
                                  "src": "6500:1:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6491:11:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 17834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6514:1:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 17833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6506:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 17832,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6506:7:59",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 17835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6506:10:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6491:25:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 17837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6518:17:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 17828,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6483:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 17838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6483:53:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17839,
                        "nodeType": "ExpressionStatement",
                        "src": "6483:53:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 17845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 17841,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17783,
                                  "src": "6559:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 17843,
                                "indexExpression": {
                                  "id": 17842,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17818,
                                  "src": "6567:1:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6559:10:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 17844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6572:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6559:14:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 17846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6575:34:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 17840,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6551:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 17847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6551:59:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17848,
                        "nodeType": "ExpressionStatement",
                        "src": "6551:59:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 17850,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17780,
                                "src": "6631:8:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 17852,
                              "indexExpression": {
                                "id": 17851,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17818,
                                "src": "6640:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6631:11:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 17853,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17783,
                                "src": "6644:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 17855,
                              "indexExpression": {
                                "id": 17854,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17818,
                                "src": "6652:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6644:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 17849,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "6625:5:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 17856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6625:30:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17857,
                        "nodeType": "ExpressionStatement",
                        "src": "6625:30:59"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17821,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17818,
                      "src": "6442:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 17822,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17780,
                        "src": "6446:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 17823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6455:6:59",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6446:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6442:19:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17859,
                  "initializationExpression": {
                    "assignments": [
                      17818
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 17818,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6435:1:59",
                        "nodeType": "VariableDeclaration",
                        "scope": 17859,
                        "src": "6427:9:59",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6427:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 17820,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 17819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6439:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6427:13:59"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 17826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6463:3:59",
                      "subExpression": {
                        "id": 17825,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17818,
                        "src": "6463:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17827,
                    "nodeType": "ExpressionStatement",
                    "src": "6463:3:59"
                  },
                  "nodeType": "ForStatement",
                  "src": "6422:245:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17861,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17780,
                        "src": "6698:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 17862,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17783,
                        "src": "6708:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 17860,
                      "name": "BatchDebtRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17501,
                      "src": "6682:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 17863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6682:34:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17864,
                  "nodeType": "EmitStatement",
                  "src": "6677:39:59"
                }
              ]
            },
            "documentation": {
              "id": 17777,
              "nodeType": "StructuredDocumentation",
              "src": "5756:327:59",
              "text": " @notice Burns debt tokens from multiple users in a single transaction\n @dev Only callable by the owner (LendingPool) when not paused, with reentrancy protection\n @param accounts Array of addresses from which to burn debt tokens\n @param amounts Array of amounts to burn for each account"
            },
            "functionSelector": "4a6cc677",
            "id": 17866,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17785,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6174:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "6174:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "6174:9:59"
              },
              {
                "id": 17788,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17787,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "6184:13:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1506,
                  "src": "6184:13:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "6184:13:59"
              },
              {
                "id": 17790,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17789,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "6198:12:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1629,
                  "src": "6198:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "6198:12:59"
              }
            ],
            "name": "batchBurn",
            "nameLocation": "6098:9:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17780,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "6127:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17866,
                  "src": "6108:27:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6108:7:59",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17779,
                    "nodeType": "ArrayTypeName",
                    "src": "6108:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17783,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6156:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17866,
                  "src": "6137:26:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17781,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6137:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17782,
                    "nodeType": "ArrayTypeName",
                    "src": "6137:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6107:57:59"
            },
            "returnParameters": {
              "id": 17791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6211:0:59"
            },
            "scope": 18027,
            "src": "6089:635:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17880,
              "nodeType": "Block",
              "src": "6880:61:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17872,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1562,
                      "src": "6891:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:8:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17874,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:8:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17876,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6922:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6926:6:59",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6922:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17875,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "6915:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6915:18:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17879,
                  "nodeType": "EmitStatement",
                  "src": "6910:23:59"
                }
              ]
            },
            "documentation": {
              "id": 17867,
              "nodeType": "StructuredDocumentation",
              "src": "6732:106:59",
              "text": " @notice Pauses minting and burning operations\n @dev Only callable by the owner"
            },
            "functionSelector": "8456cb59",
            "id": 17881,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17870,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17869,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6870:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "6870:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "6870:9:59"
              }
            ],
            "name": "pause",
            "nameLocation": "6853:5:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6858:2:59"
            },
            "returnParameters": {
              "id": 17871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6880:0:59"
            },
            "scope": 18027,
            "src": "6844:97:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17895,
              "nodeType": "Block",
              "src": "7101:65:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17887,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "7112:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7112:10:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17889,
                  "nodeType": "ExpressionStatement",
                  "src": "7112:10:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17891,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7147:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7151:6:59",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7147:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17890,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1476,
                      "src": "7138:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7138:20:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17894,
                  "nodeType": "EmitStatement",
                  "src": "7133:25:59"
                }
              ]
            },
            "documentation": {
              "id": 17882,
              "nodeType": "StructuredDocumentation",
              "src": "6949:108:59",
              "text": " @notice Unpauses minting and burning operations\n @dev Only callable by the owner"
            },
            "functionSelector": "3f4ba83a",
            "id": 17896,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17884,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7091:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "7091:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "7091:9:59"
              }
            ],
            "name": "unpause",
            "nameLocation": "7072:7:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7079:2:59"
            },
            "returnParameters": {
              "id": 17886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7101:0:59"
            },
            "scope": 18027,
            "src": "7063:103:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17930,
              "nodeType": "Block",
              "src": "7536:280:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17905,
                          "name": "newImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17899,
                          "src": "7555:17:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7584:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7576:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17906,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7576:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7576:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7555:31:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696d706c656d656e746174696f6e2061646472657373",
                        "id": 17911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7588:32:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324",
                          "typeString": "literal_string \"Invalid implementation address\""
                        },
                        "value": "Invalid implementation address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324",
                          "typeString": "literal_string \"Invalid implementation address\""
                        }
                      ],
                      "id": 17904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7547:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7547:74:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17913,
                  "nodeType": "ExpressionStatement",
                  "src": "7547:74:59"
                },
                {
                  "expression": {
                    "id": 17919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17914,
                      "name": "upgradeProposalTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17455,
                      "src": "7632:19:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 17918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 17915,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7654:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 17916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7660:9:59",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7654:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 17917,
                        "name": "upgradeDelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17452,
                        "src": "7672:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7654:30:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7632:52:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17920,
                  "nodeType": "ExpressionStatement",
                  "src": "7632:52:59"
                },
                {
                  "expression": {
                    "id": 17923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17921,
                      "name": "proposedImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17458,
                      "src": "7695:22:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17922,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17899,
                      "src": "7720:17:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7695:42:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17924,
                  "nodeType": "ExpressionStatement",
                  "src": "7695:42:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17926,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17899,
                        "src": "7769:17:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17927,
                        "name": "upgradeProposalTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17455,
                        "src": "7788:19:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17925,
                      "name": "UpgradeProposed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17483,
                      "src": "7753:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7753:55:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17929,
                  "nodeType": "EmitStatement",
                  "src": "7748:60:59"
                }
              ]
            },
            "documentation": {
              "id": 17897,
              "nodeType": "StructuredDocumentation",
              "src": "7174:286:59",
              "text": " @notice Proposes a new implementation for the contract upgrade\n @dev Only callable by the owner. The upgrade can only be executed after the timelock period (upgradeDelay) has passed.\n @param newImplementation Address of the new contract implementation"
            },
            "functionSelector": "c915fc93",
            "id": 17931,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17902,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17901,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7526:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "7526:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "7526:9:59"
              }
            ],
            "name": "proposeUpgrade",
            "nameLocation": "7475:14:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17899,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "7498:17:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17931,
                  "src": "7490:25:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7490:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7489:27:59"
            },
            "returnParameters": {
              "id": 17903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7536:0:59"
            },
            "scope": 18027,
            "src": "7466:350:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1450
            ],
            "body": {
              "id": 17973,
              "nodeType": "Block",
              "src": "8234:325:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17941,
                          "name": "newImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17934,
                          "src": "8253:17:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 17942,
                          "name": "proposedImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17458,
                          "src": "8274:22:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8253:43:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696d706c656d656e746174696f6e",
                        "id": 17944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8298:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26b47a002132cea0a925aef4dbf669c486d2d4b7979ed0c176a2e4f058e38c3c",
                          "typeString": "literal_string \"Invalid implementation\""
                        },
                        "value": "Invalid implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26b47a002132cea0a925aef4dbf669c486d2d4b7979ed0c176a2e4f058e38c3c",
                          "typeString": "literal_string \"Invalid implementation\""
                        }
                      ],
                      "id": 17940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8245:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8245:78:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17946,
                  "nodeType": "ExpressionStatement",
                  "src": "8245:78:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17948,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "8342:5:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 17949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8348:9:59",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8342:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 17950,
                          "name": "upgradeProposalTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17455,
                          "src": "8361:19:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8342:38:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d656c6f636b206e6f7420656c6170736564",
                        "id": 17952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8382:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7b0e9844b7c4fbcd6d0796452379ca11fb46fb9b60a48af478ed65baeb7e6f4",
                          "typeString": "literal_string \"Timelock not elapsed\""
                        },
                        "value": "Timelock not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7b0e9844b7c4fbcd6d0796452379ca11fb46fb9b60a48af478ed65baeb7e6f4",
                          "typeString": "literal_string \"Timelock not elapsed\""
                        }
                      ],
                      "id": 17947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8334:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8334:71:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17954,
                  "nodeType": "ExpressionStatement",
                  "src": "8334:71:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17956,
                          "name": "upgradeProposalTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17455,
                          "src": "8424:19:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 17957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8446:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8424:23:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20757067726164652070726f706f736564",
                        "id": 17959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8449:21:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7af5a1cd504120e31df382aa47db08cfe34c0a3621cd448f004c4024a9f0711",
                          "typeString": "literal_string \"No upgrade proposed\""
                        },
                        "value": "No upgrade proposed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7af5a1cd504120e31df382aa47db08cfe34c0a3621cd448f004c4024a9f0711",
                          "typeString": "literal_string \"No upgrade proposed\""
                        }
                      ],
                      "id": 17955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8416:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8416:55:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17961,
                  "nodeType": "ExpressionStatement",
                  "src": "8416:55:59"
                },
                {
                  "expression": {
                    "id": 17964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17962,
                      "name": "upgradeProposalTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17455,
                      "src": "8482:19:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 17963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8504:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8482:23:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17965,
                  "nodeType": "ExpressionStatement",
                  "src": "8482:23:59"
                },
                {
                  "expression": {
                    "id": 17971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17966,
                      "name": "proposedImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17458,
                      "src": "8516:22:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 17969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8549:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 17968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8541:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 17967,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8541:7:59",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 17970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8541:10:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8516:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17972,
                  "nodeType": "ExpressionStatement",
                  "src": "8516:35:59"
                }
              ]
            },
            "documentation": {
              "id": 17932,
              "nodeType": "StructuredDocumentation",
              "src": "7824:322:59",
              "text": " @dev Authorizes the upgrade to the proposed implementation after the timelock period\n @param newImplementation Address of the new contract implementation\n @notice Only callable by the owner. The newImplementation must match the proposedImplementation, and the timelock must have elapsed."
            },
            "id": 17974,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17938,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17937,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8224:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "8224:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "8224:9:59"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "8161:17:59",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17936,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8215:8:59"
            },
            "parameters": {
              "id": 17935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17934,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "8187:17:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 17974,
                  "src": "8179:25:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8179:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8178:27:59"
            },
            "returnParameters": {
              "id": 17939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8234:0:59"
            },
            "scope": 18027,
            "src": "8152:407:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17982,
              "nodeType": "Block",
              "src": "8769:48:59",
              "statements": [
                {
                  "expression": {
                    "id": 17980,
                    "name": "proposedImplementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17458,
                    "src": "8787:22:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 17979,
                  "id": 17981,
                  "nodeType": "Return",
                  "src": "8780:29:59"
                }
              ]
            },
            "documentation": {
              "id": 17975,
              "nodeType": "StructuredDocumentation",
              "src": "8567:127:59",
              "text": " @notice Returns the proposed implementation address\n @return Address of the proposed implementation"
            },
            "functionSelector": "5ac22bf8",
            "id": 17983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposedImplementation",
            "nameLocation": "8709:25:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8734:2:59"
            },
            "returnParameters": {
              "id": 17979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17983,
                  "src": "8760:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8759:9:59"
            },
            "scope": 18027,
            "src": "8700:117:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17991,
              "nodeType": "Block",
              "src": "9039:45:59",
              "statements": [
                {
                  "expression": {
                    "id": 17989,
                    "name": "upgradeProposalTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17455,
                    "src": "9057:19:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17988,
                  "id": 17990,
                  "nodeType": "Return",
                  "src": "9050:26:59"
                }
              ]
            },
            "documentation": {
              "id": 17984,
              "nodeType": "StructuredDocumentation",
              "src": "8825:142:59",
              "text": " @notice Returns the timestamp when the proposed upgrade can be executed\n @return Timestamp of the proposed upgrade"
            },
            "functionSelector": "40381738",
            "id": 17992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpgradeProposalTime",
            "nameLocation": "8982:22:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9004:2:59"
            },
            "returnParameters": {
              "id": 17988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17992,
                  "src": "9030:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9030:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9029:9:59"
            },
            "scope": 18027,
            "src": "8973:111:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1814
            ],
            "body": {
              "id": 18007,
              "nodeType": "Block",
              "src": "9301:62:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44656274546f6b656e3a205472616e7366657273206172652064697361626c6564",
                        "id": 18004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9319:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_830bec9139c7e5461edd608308cb3a9f0ee3a1dd7c98e25f32bcbba15a945d80",
                          "typeString": "literal_string \"DebtToken: Transfers are disabled\""
                        },
                        "value": "DebtToken: Transfers are disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_830bec9139c7e5461edd608308cb3a9f0ee3a1dd7c98e25f32bcbba15a945d80",
                          "typeString": "literal_string \"DebtToken: Transfers are disabled\""
                        }
                      ],
                      "id": 18003,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "9312:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 18005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9312:43:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18006,
                  "nodeType": "ExpressionStatement",
                  "src": "9312:43:59"
                }
              ]
            },
            "documentation": {
              "id": 17993,
              "nodeType": "StructuredDocumentation",
              "src": "9092:128:59",
              "text": " @notice Disables token transfers\n @dev Debt tokens are non-transferable to ensure protocol integrity"
            },
            "functionSelector": "a9059cbb",
            "id": 18008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "9235:8:59",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9277:8:59"
            },
            "parameters": {
              "id": 17998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18008,
                  "src": "9244:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9244:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18008,
                  "src": "9253:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9253:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9243:18:59"
            },
            "returnParameters": {
              "id": 18002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18008,
                  "src": "9295:4:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9295:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9294:6:59"
            },
            "scope": 18027,
            "src": "9226:137:59",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1890
            ],
            "body": {
              "id": 18025,
              "nodeType": "Block",
              "src": "9593:62:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44656274546f6b656e3a205472616e7366657273206172652064697361626c6564",
                        "id": 18022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9611:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_830bec9139c7e5461edd608308cb3a9f0ee3a1dd7c98e25f32bcbba15a945d80",
                          "typeString": "literal_string \"DebtToken: Transfers are disabled\""
                        },
                        "value": "DebtToken: Transfers are disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_830bec9139c7e5461edd608308cb3a9f0ee3a1dd7c98e25f32bcbba15a945d80",
                          "typeString": "literal_string \"DebtToken: Transfers are disabled\""
                        }
                      ],
                      "id": 18021,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "9604:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 18023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9604:43:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18024,
                  "nodeType": "ExpressionStatement",
                  "src": "9604:43:59"
                }
              ]
            },
            "documentation": {
              "id": 18009,
              "nodeType": "StructuredDocumentation",
              "src": "9371:128:59",
              "text": " @notice Disables token transfers\n @dev Debt tokens are non-transferable to ensure protocol integrity"
            },
            "functionSelector": "23b872dd",
            "id": 18026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "9514:12:59",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9569:8:59"
            },
            "parameters": {
              "id": 18016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18026,
                  "src": "9527:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9527:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18013,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18026,
                  "src": "9536:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9536:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18026,
                  "src": "9545:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9545:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9526:27:59"
            },
            "returnParameters": {
              "id": 18020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18026,
                  "src": "9587:4:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9587:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9586:6:59"
            },
            "scope": 18027,
            "src": "9505:150:59",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 18028,
        "src": "913:8745:59",
        "usedErrors": [],
        "usedEvents": [
          669,
          792,
          799,
          804,
          1165,
          1471,
          1476,
          2294,
          2303,
          17467,
          17476,
          17483,
          17492,
          17501
        ]
      }
    ],
    "src": "33:9625:59"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-06-04T21:49:36.680Z",
  "devdoc": {
    "details": "Upgradeable ERC20 token representing user debt in a lending protocol",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "BeaconUpgraded(address)": {
        "details": "Emitted when the beacon is changed."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "batchBurn(address[],uint256[])": {
        "details": "Only callable by the owner (LendingPool) when not paused, with reentrancy protection",
        "params": {
          "accounts": "Array of addresses from which to burn debt tokens",
          "amounts": "Array of amounts to burn for each account"
        }
      },
      "batchMint(address[],uint256[])": {
        "details": "Only callable by the owner (LendingPool) when not paused, with reentrancy protection",
        "params": {
          "amounts": "Array of amounts to mint for each recipient",
          "recipients": "Array of addresses receiving the debt tokens"
        }
      },
      "burn(address,uint256)": {
        "details": "Only callable by the owner (LendingPool) when not paused, with reentrancy protection",
        "params": {
          "amount": "Amount of debt tokens to burn, in wei",
          "from": "Address from which to burn debt tokens"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getProposedImplementation()": {
        "returns": {
          "_0": "Address of the proposed implementation"
        }
      },
      "getUpgradeProposalTime()": {
        "returns": {
          "_0": "Timestamp of the proposed upgrade"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(string,string,address,address,uint256)": {
        "details": "Constructor is replaced by initializer for upgradeable contracts",
        "params": {
          "_underlyingAsset": "Address of the underlying asset (e.g., USDC)",
          "_upgradeDelay": "Delay for upgrades in seconds (min 1 hour, max 30 days)",
          "name_": "Token name (e.g., \"Debt USDC\")",
          "symbol_": "Token symbol (e.g., \"dUSDC\")"
        }
      },
      "mint(address,uint256)": {
        "details": "Only callable by the owner (LendingPool) when not paused, with reentrancy protection",
        "params": {
          "amount": "Amount of debt tokens to mint, in wei",
          "to": "Address receiving the debt tokens"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only callable by the owner"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "proposeUpgrade(address)": {
        "details": "Only callable by the owner. The upgrade can only be executed after the timelock period (upgradeDelay) has passed.",
        "params": {
          "newImplementation": "Address of the new contract implementation"
        }
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Debt tokens are non-transferable to ensure protocol integrity"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Debt tokens are non-transferable to ensure protocol integrity"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only callable by the owner"
      },
      "upgradeTo(address)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "title": "DebtToken",
    "version": 1
  },
  "userdoc": {
    "events": {
      "BatchDebtMinted(address[],uint256[])": {
        "notice": "Emitted when debt tokens are minted in batch"
      },
      "BatchDebtRepaid(address[],uint256[])": {
        "notice": "Emitted when debt tokens are burned in batch"
      },
      "DebtMinted(address,address,uint256)": {
        "notice": "Emitted when debt tokens are minted"
      },
      "DebtRepaid(address,address,uint256)": {
        "notice": "Emitted when debt tokens are burned"
      },
      "UpgradeProposed(address,uint256)": {
        "notice": "Emitted when an upgrade is proposed"
      }
    },
    "kind": "user",
    "methods": {
      "batchBurn(address[],uint256[])": {
        "notice": "Burns debt tokens from multiple users in a single transaction"
      },
      "batchMint(address[],uint256[])": {
        "notice": "Mints debt tokens to multiple users in a single transaction"
      },
      "burn(address,uint256)": {
        "notice": "Burns debt tokens from a user, representing debt repayment"
      },
      "getProposedImplementation()": {
        "notice": "Returns the proposed implementation address"
      },
      "getUpgradeProposalTime()": {
        "notice": "Returns the timestamp when the proposed upgrade can be executed"
      },
      "mint(address,uint256)": {
        "notice": "Mints debt tokens to a user, representing new debt"
      },
      "pause()": {
        "notice": "Pauses minting and burning operations"
      },
      "proposeUpgrade(address)": {
        "notice": "Proposes a new implementation for the contract upgrade"
      },
      "proposedImplementation()": {
        "notice": "Proposed new implementation address for the upgrade"
      },
      "transfer(address,uint256)": {
        "notice": "Disables token transfers"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Disables token transfers"
      },
      "underlyingAsset()": {
        "notice": "Address of the underlying asset (e.g., USDC) associated with this debt token"
      },
      "unpause()": {
        "notice": "Unpauses minting and burning operations"
      },
      "upgradeDelay()": {
        "notice": "Delay for contract upgrades (in seconds)"
      },
      "upgradeProposalTime()": {
        "notice": "Timestamp when the proposed upgrade can be executed"
      }
    },
    "notice": "Tracks debt for a specific asset, minted when borrowing and burned upon repayment.         Only the owner (LendingPool) can mint/burn tokens. Supports pausing, upgrades with a timelock,         and reentrancy protection for future-proofing.",
    "version": 1
  }
}